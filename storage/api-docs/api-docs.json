{
    "openapi": "3.0.0",
    "info": {
        "title": "laravel_api_store",
        "description": "توضیحات درباره پروژه Api لاراول",
        "contact": {
            "email": "missastaneh@gmail.com"
        },
        "license": {
            "name": "Missastane",
            "url": "https://missastane.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/content/banner": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Retrieve list of Banners",
                "description": "Retrieve list of all `Banners`",
                "operationId": "6462892f4d45da9fa65113578d169458",
                "responses": {
                    "200": {
                        "description": "A list of Banners",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Banner"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/search": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Searchs among Banners by title",
                "description": "This endpoint allows users to search for `Banners` by title. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "cc1f9ad7398b2246bfa788ebc0c858dc",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type title of Banner which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Banners",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Banner"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/show/{banner}": {
            "get": {
                "tags": [
                    "Banner",
                    "Banner/Form"
                ],
                "summary": "Get details of a specific Banner",
                "description": "Returns the `Banner` details and provide details for edit method.",
                "operationId": "getBannerDetails",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "description": "ID of the Banner to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Banner details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Banner"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/store": {
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "create new Banner",
                "description": "this method creates a new `Banner` and stores it.",
                "operationId": "232b38f9e962aa14d664ae1467ed8fa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "position": {
                                        "description": "Each number in the `position` field corresponds to a specific position on the page, determined by designer.For example 0 means above of the main page big slideshow",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Banner creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "بنر x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/status/{banner}": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Change the status of a Banner",
                "description": "This endpoint `toggles the status of a Banner` (active/inactive)",
                "operationId": "updateBannerStatus",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "description": "Banner id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/update/{banner}": {
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "Update an existing Banner",
                "description": "this method Update an existing `Banner` and stores it.",
                "operationId": "611e21337d6c4ad343afeb1a3846bdd8",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "description": "Banner id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "position": {
                                        "description": "Each number in the `position` field corresponds to a specific position on the page, determined by designer.For example 0 means above of the main page big slideshow",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Banner update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "بنر x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/banner/destroy/{banner}": {
            "delete": {
                "tags": [
                    "Banner"
                ],
                "summary": "Delete a Banner",
                "description": "This endpoint allows the user to `delete an existing Banner`.",
                "operationId": "deleteBanner",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "description": "The ID of the Banner to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "بنر با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category": {
            "get": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "Retrieve list of PostCategory",
                "description": "Retrieve list of all `PostCategory`",
                "operationId": "10864328aa6589bbf3bc8a0518804f12",
                "responses": {
                    "200": {
                        "description": "A list of PostCategory with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/search": {
            "get": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "Searchs among PostCategory by name",
                "description": "This endpoint allows users to search for `PostCategory` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "4df8d40eb2472fb2ab8769f3a6ff5c0d",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of PostCategory which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of PostCategory with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/show/{category}": {
            "get": {
                "tags": [
                    "PostCategory",
                    "PostCategory/Form"
                ],
                "summary": "Get details of a specific PostCategory",
                "description": "Returns the `PostCategory` details along with tags and provide details for edit method.",
                "operationId": "getPostCategoryDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the PostCategory to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched PostCategory details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCategory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/store": {
            "post": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "create new PostCategory",
                "description": "this method creates a new `PostCategory` and stores its related tags.",
                "operationId": "053024b9834c3615301ba0b07f828beb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "توضیح لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful PostCategory and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/status/{category}": {
            "get": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "Change the status of a PostCategory",
                "description": "This endpoint `toggles the status of a PostCategory` (active/inactive)",
                "operationId": "updatePostCategoryStatus",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "PostCategory id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PostCategory status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت دسته x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/update/{category}": {
            "post": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "Update an existing PostCategory",
                "description": "this method update an existing `PostCategory` and stores its related tags.",
                "operationId": "d80060c838e8d2e31f3c64a37664da8e",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "PostCategory id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "توضیح لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful PostCategory and tags Update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/category/destroy/{category}": {
            "delete": {
                "tags": [
                    "PostCategory"
                ],
                "summary": "Delete a PostCategory",
                "description": "This endpoint allows the user to `delete an existing PostCategory`.",
                "operationId": "deletePostCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The ID of the PostCategory to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PostCategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته بندی با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment": {
            "get": {
                "tags": [
                    "Comment",
                    "PostComment"
                ],
                "summary": "Get post comments",
                "description": "Retrieves a paginated list of comments related to posts. Also updates the 'seen' status of unseen comments.",
                "operationId": "47387efcb5ea9e10b6caf48b4e2d0c48",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment/search": {
            "get": {
                "tags": [
                    "Comment",
                    "PostComment"
                ],
                "summary": "Searchs among PostComments by keyword in comment body",
                "description": "This endpoint allows users to search for `Comments` by keyword in comment body. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "65d298081f45dae595da8c9f31aa816b",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type keyword which you're searching for in body of Comment",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Comments with their relations: commentable,parent and author",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment/show/{comment}": {
            "get": {
                "tags": [
                    "Comment",
                    "PostComment",
                    "PostComment/Form"
                ],
                "summary": "Get details of a specific Comment",
                "description": "Returns the `PostComment` details along with commentable,parent and author and provide details for edit method.",
                "operationId": "getPostCommentDetails",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ID of the Comment to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment Details with its relations: commentable,parent and author",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment/answer/{comment}": {
            "post": {
                "tags": [
                    "Comment",
                    "PostComment"
                ],
                "summary": "Reply to a customer comment",
                "description": "This endpoint allows an admin to `reply to customer comments`. Only comments without replies can be answered.",
                "operationId": "answerPostComment",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "The ID of the comment to be replied to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "body"
                                ],
                                "properties": {
                                    "body": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symboles (-.,?؟.،). Any other characters will result in a validation error",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "Thank you for your feedback, your order is being processed."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پاسخ نظر با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ارسال پاسخ با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The comment has already been replied to",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "امکان ارسال پاسخ به این نظر وجود ندارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment/status/{comment}": {
            "get": {
                "tags": [
                    "PostComment",
                    "Comment"
                ],
                "summary": "Change the status of a PostComment",
                "description": "This endpoint `toggles the status of a PostComment` (active/inactive)",
                "operationId": "updatePostCommentStatus",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "PostComment id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PostComment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت نظر x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/comment/approved/{comment}": {
            "get": {
                "tags": [
                    "PostComment",
                    "Comment"
                ],
                "summary": "Change the PostComment's Approval State",
                "description": "This endpoint `toggles the PostComment's Approval State` (active/inactive)",
                "operationId": "updatePostCommentApproved",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "PostComment id to change the approval state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PostComment approval status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت تأییدیه نظر x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "Retrieve list of Faqs",
                "description": "Retrieve list of all `Faqs`",
                "operationId": "3566d7d211f50a063405e28d19328421",
                "responses": {
                    "200": {
                        "description": "A list of Faqs with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Faq"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/search": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "Searchs among Faqs by name",
                "description": "This endpoint allows users to search for `Faqs` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "5fb3977fd534c8df1eb1d4d1d12d1438",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Faq which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Faqs with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Faq"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/show/{faq}": {
            "get": {
                "tags": [
                    "Faq",
                    "Faq/Form"
                ],
                "summary": "Get details of a specific Faq",
                "description": "Returns the `Faq` details along with tags and provide details for edit method. also `productCategories` in this method is specially provided details for edit form",
                "operationId": "getFaqyDetails",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "description": "ID of the Faq to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Faq details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Faq"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/store": {
            "post": {
                "tags": [
                    "Faq"
                ],
                "summary": "create new Faq",
                "description": "this method creates a new `Faq` and stores its related tags.",
                "operationId": "796b97481976141cb92beb1f45c1c883",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "maximum": 255,
                                        "minimum": 2,
                                        "example": "چگونه میتوانم در سایت ثبت نام کنم؟"
                                    },
                                    "answer": {
                                        "type": "string",
                                        "maximum": 300,
                                        "minimum": 5,
                                        "example": "به سادگی تمام"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Faq and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سؤال با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سؤال الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/status/{faq}": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "Change the status of a Faq",
                "description": "This endpoint `toggles the status of a Faq` (active/inactive)",
                "operationId": "updateFaqStatus",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "description": "Faq id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faq status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/update/{faq}": {
            "put": {
                "tags": [
                    "Faq"
                ],
                "summary": "Update an existing Faq",
                "description": "this method update an existing `Faq` and stores its related tags.",
                "operationId": "a8cbecd157256a2c04b6c4c4961a5c4e",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "description": "Faq id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "maximum": 255,
                                        "minimum": 2,
                                        "example": "آیا متد استور سؤالات متداول درست کار میکنه؟"
                                    },
                                    "answer": {
                                        "type": "string",
                                        "maximum": 300,
                                        "minimum": 5,
                                        "example": "نمیدونم. باید تست کرد"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Faq and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سؤال با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سؤال الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/faq/destroy/{faq}": {
            "delete": {
                "tags": [
                    "Faq"
                ],
                "summary": "Delete a Faq",
                "description": "This endpoint allows the user to `delete an existing Faq`.",
                "operationId": "deleteFaq",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "description": "The ID of the Faq to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faq deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سؤال با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Retrieve list of Menus",
                "description": "Retrieve list of all `Menus`",
                "operationId": "89ab2dfc4ce2df1ec7676f7be7c989e7",
                "responses": {
                    "200": {
                        "description": "A list of Menus with their Parent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Menu"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/search": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Searchs among Menus by name",
                "description": "This endpoint allows users to search for `Menus` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "00904ff451ae045910ac1aa6abaecd35",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Menu which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Menus with their Parent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Menu"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/show/{menu}": {
            "get": {
                "tags": [
                    "Menu",
                    "Menu/Form"
                ],
                "summary": "Get details of a specific Menu",
                "description": "Returns the `Menu` details along with tags and provide details for edit method. also `parentMenus` in this method is specially provided details for edit form",
                "operationId": "getMenuDetails",
                "parameters": [
                    {
                        "name": "menu",
                        "in": "path",
                        "description": "ID of the Menu to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Menu details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "Menu": {
                                                    "$ref": "#/components/schemas/Menu"
                                                },
                                                "parentMenus": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "کالای دیجیتال"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/options": {
            "get": {
                "tags": [
                    "Menu",
                    "Menu/Form"
                ],
                "summary": "Get necessary options for Menu forms",
                "description": "This endpoint returns all `parentMenus` which can be used to create a new menu",
                "operationId": "33c8f965f1a32d0b2d4263f8c4ffbf07",
                "responses": {
                    "200": {
                        "description": "Successfully fetched parentMenus that you may need to make create form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "parentMenus": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/store": {
            "post": {
                "tags": [
                    "Menu"
                ],
                "summary": "create new Menu",
                "description": "this method creates a new `Menu` and stores its.",
                "operationId": "dc1048adccdc7f3f754f03a4eb1141e6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,_). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\_\\.\\,]+$",
                                        "example": "موبایل"
                                    },
                                    "url": {
                                        "description": "a valid url",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "parent_id": {
                                        "description": "ParentID.This field is optional when creating or updating the menu.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful menu creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "منوی x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/status/{menu}": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Change the status of a Menu",
                "description": "This endpoint `toggles the status of a Menu` (active/inactive)",
                "operationId": "updateMenuStatus",
                "parameters": [
                    {
                        "name": "menu",
                        "in": "path",
                        "description": "Menu id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/update/{menu}": {
            "put": {
                "tags": [
                    "Menu"
                ],
                "summary": "Update an existing Menu",
                "description": "this method update an existing `Menu` and stores it.",
                "operationId": "debbdafe52967967163c2ededcd486ee",
                "parameters": [
                    {
                        "name": "menu",
                        "in": "path",
                        "description": "Menu id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,_). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\_\\.\\,]+$",
                                        "example": "موبایل"
                                    },
                                    "url": {
                                        "description": "a valid url",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "parent_id": {
                                        "description": "ParentID.This field is optional when creating or updating the category.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful menu update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "منوی x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/menu/destroy/{menu}": {
            "delete": {
                "tags": [
                    "Menu"
                ],
                "summary": "Delete a Menu",
                "description": "This endpoint allows the user to `delete an existing Menu`.",
                "operationId": "deleteMenu",
                "parameters": [
                    {
                        "name": "menu",
                        "in": "path",
                        "description": "The ID of the Menu to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "منوی Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Retrieve list of Pages",
                "description": "Retrieve list of all `Pages`",
                "operationId": "231517009282ec11778c63c717f34f58",
                "responses": {
                    "200": {
                        "description": "A list of Pages with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/search": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Searchs among Pages by title",
                "description": "This endpoint allows users to search for `Pages` by title. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "93b7d7b382ec3ee9821cc445c1068798",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type title of Page which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Pages with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/show/{page}": {
            "get": {
                "tags": [
                    "Page",
                    "Page/Form"
                ],
                "summary": "Get details of a specific Page",
                "description": "Returns the `Page` details along with tags and provide details for edit method.",
                "operationId": "getPageDetails",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "ID of the Page to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Page details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/store": {
            "post": {
                "tags": [
                    "Page"
                ],
                "summary": "create new Page",
                "description": "this method creates a new `Page` and stores its related tags.",
                "operationId": "f3bf1b7d29e3cee4b2bbf44dc64fe4b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?_!؟.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\_\\,\\،؟]+$",
                                        "example": "درباره ما"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "بدنه درباره ما"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "درباره ما"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Page and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "صفحه x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/status/{page}": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Change the status of a Page",
                "description": "This endpoint `toggles the status of a Page` (active/inactive)",
                "operationId": "updatePageStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/update/{page}": {
            "put": {
                "tags": [
                    "Page"
                ],
                "summary": "Updates an existing Page",
                "description": "this method updates an existin `Page` and stores its related tags.",
                "operationId": "a5025ccb4bb37063ab6bcce9b64bcae9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?_!؟.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\_\\,\\،؟]+$",
                                        "example": "درباره ما"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "بدنه درباره ما"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "درباره ما"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Page and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "صفحه x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/page/destroy/{page}": {
            "delete": {
                "tags": [
                    "Page"
                ],
                "summary": "Delete a Page",
                "description": "This endpoint allows the user to `delete an existing Page`.",
                "operationId": "deletePage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "The ID of the Page to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "صفحه Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieve list of Posts",
                "description": "Retrieve list of all `Posts`",
                "operationId": "a95f44958028043e959922b4b97f637b",
                "responses": {
                    "200": {
                        "description": "A list of Posts with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/search": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Searchs among Posts by title",
                "description": "This endpoint allows users to search for `Posts` by title. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "19cd224099610385efe11e9d30c024db",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type title of Post which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Posts with their Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/show/{post}": {
            "get": {
                "tags": [
                    "Post",
                    "Post/Form"
                ],
                "summary": "Get details of a specific Post",
                "description": "Returns the `Post` details along with tags and provide details for edit method.",
                "operationId": "getPostDetails",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "ID of the Post to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Post details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/options": {
            "get": {
                "tags": [
                    "Post",
                    "Post/Form"
                ],
                "summary": "Get necessary options for Post forms",
                "description": "This endpoint returns all `PostCategories` which can be used to create a new post",
                "operationId": "356a966d8f353e78f89d7e2e3cb5e394",
                "responses": {
                    "200": {
                        "description": "Successfully fetched post categories that you may need to make a post create form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "postCategories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/store": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "create new category",
                "description": "this method creates a new `Post` and stores its related tags.",
                "operationId": "fe98ee320a7b571222a8938c5a12a7f7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "خلاصه تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "توضیح تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "commentable": {
                                        "oneOf": [
                                            {
                                                "description": "1 = yes",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = no",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "post_category_id": {
                                        "description": "ParentID.This field is optional when creating or updating the category.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "تازه های دیجیتال"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Post and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پست x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/status/{post}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Change the status of a Post",
                "description": "This endpoint `toggles the status of a Post` (active/inactive)",
                "operationId": "updatePostStatus",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/commentable/{post}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Change the status of a post commentable",
                "description": "This endpoint `toggles the commentable state of a Post` (active/inactive)",
                "operationId": "updatePostCommentableStatus",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post id to change the commentable status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post Commentable status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "امکان درج نظر x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/update/{post}": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Update an existing post",
                "description": "this method updates an existing `Post` and stores its related tags.",
                "operationId": "10124dd6ca3f83cae2a74e6f0ebe6dd6",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "خلاصه تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "توضیح تأثیر هوش مصنوعی بر دنیای دیجیتال"
                                    },
                                    "commentable": {
                                        "oneOf": [
                                            {
                                                "description": "1 = yes",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = no",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "post_category_id": {
                                        "description": "ParentID.This field is optional when creating or updating the category.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "تازه های دیجیتال"
                                        }
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Post and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پست x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/post/destroy/{post}": {
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a Post",
                "description": "This endpoint allows the user to `delete an existing Post`.",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "The ID of the Post to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پست Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Retrieve list of Tags",
                "description": "Retrieve list of all `Tags`",
                "operationId": "fd387de49a87d9e5aa44b2b275f90a82",
                "responses": {
                    "200": {
                        "description": "A list of Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag/search": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Searchs among Tags by name",
                "description": "This endpoint allows users to search for `Tags` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "cd3f9d21987ff31908c74d29af3d3275",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Type name of Tag which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Tags with their Taggable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag/show/{tag}": {
            "get": {
                "tags": [
                    "Tag",
                    "Tag/Form"
                ],
                "summary": "Get details of a specific Tag",
                "description": "Returns the `Tag` details along with taggable and provide details for edit method.",
                "operationId": "getTagDetails",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "ID of the Tag to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Tag details with taggable for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag/store": {
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "create new Tag",
                "description": "this method creates a new `Tag` and stores its related taggable.",
                "operationId": "7754c92b85ec54a4b5f2fdddf597ef84",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (,،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\،,]+$",
                                        "example": "لوازم ورزشی"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Tag creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تگ x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag/update/{tag}": {
            "put": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update an exisiting Tag",
                "description": "this method Update an exisiting`Tag` and stores it.",
                "operationId": "6421598e942aa5ed7529e96228a6bd8d",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "Tag id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (,،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\،,]+$",
                                        "example": "لوازم ورزشی"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Tag creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تگ x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/content/tag/destroy/{tag}": {
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a Tag",
                "description": "This endpoint allows the user to `delete an existing Tag`.",
                "operationId": "deleteTag",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "The ID of the Tag to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تگ Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Retrieve list of brands",
                "description": "Retrieve list of all `Brands`",
                "operationId": "bc1c5ad2a020a116ad23e117d8f1e3a7",
                "responses": {
                    "200": {
                        "description": "A list of brands with Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/search": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Searchs among brands by name",
                "description": "This endpoint allows users to search for `Brands` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "8b62980479452b575f771f6850760e20",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of brand which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Brands with Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/show/{brand}": {
            "get": {
                "tags": [
                    "Brand",
                    "Brand/Form"
                ],
                "summary": "Get details of a specific Brand",
                "description": "Returns the `Brand` details along with tags and provide details for edit method",
                "operationId": "getBrandDetails",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "ID of the Brand to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Brand details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/store": {
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "create new brand",
                "description": "this method creates a new `Brand` and stores its related tags.",
                "operationId": "a5021923a32962ed626dcee38f96525b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "persian_name": {
                                        "description": "This field can only contain Persian letters and numbers, and hyphens (،.) and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF0-9 ,.]+$",
                                        "example": "پاکشوما"
                                    },
                                    "original_name": {
                                        "description": "This field can only contain English letters and numbers, and space and comma. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z0-9 ,]+$",
                                        "example": "PakShooma"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "آیا api خوب است؟"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful brand and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "برند x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام برند الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/status/{brand}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Change the status of a brand",
                "description": "This endpoint `toggles the status of a brand` (active/inactive)",
                "operationId": "updateBrandStatus",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "Brand id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت برند x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/update/{brand}": {
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "create new brand",
                "description": "this method updates an existing `Brand` and its related tags.",
                "operationId": "970fd4b3c530161d40a66356e94277cc",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "Brand id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "persian_name": {
                                        "description": "This field can only contain Persian letters and numbers, and hyphens (،.) and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF0-9 ,.]+$",
                                        "example": "پاکشوما"
                                    },
                                    "original_name": {
                                        "description": "This field can only contain English letters and numbers, and space and comma. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z0-9 ,]+$",
                                        "example": "PakShooma"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "آیا api خوب است؟"
                                        }
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful brand and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "برند x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام برند الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/brand/destroy/{brand}": {
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete a Brand",
                "description": "This endpoint allows the user to `delete an existing Brand`.",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "The ID of the Brand to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "برند Example Brand با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مشکلی پیش آمده است. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category": {
            "get": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "Retrieve list of categories",
                "description": "Retrieve list of all `Categories`",
                "operationId": "110596b02c4246b932ca772f96187682",
                "responses": {
                    "200": {
                        "description": "A list of categories with their Parents and Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/search": {
            "get": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "Searchs among Categories by name",
                "description": "This endpoint allows users to search for `Categories` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "742bc8a6de5d6ad937351713999b7dd0",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Category which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Categories with their Parent and Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/show/{category}": {
            "get": {
                "tags": [
                    "ProductCategory",
                    "ProductCategory/Form"
                ],
                "summary": "Get details of a specific Category",
                "description": "Returns the `Category` details along with tags and provide details for edit method. also `productCategories` in this method is specially provided details for edit form",
                "operationId": "getCategoryDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the Category to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Category details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/components/schemas/Category"
                                                },
                                                "productCategories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "کالای دیجیتال"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/options": {
            "get": {
                "tags": [
                    "ProductCategory",
                    "ProductCategory/Form"
                ],
                "summary": "Get necessary options for ProductCategory forms",
                "description": "This endpoint returns all `productCategories` which can be used to create a new product",
                "operationId": "249a41a5e967242fe4618b9b3a53c597",
                "responses": {
                    "200": {
                        "description": "Successfully fetched product categories that you may need to make create form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "productCategories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/store": {
            "post": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "create new category",
                "description": "this method creates a new `ProductCategory` and stores its related tags.",
                "operationId": "5e558af1d86af6e7d4b4b660b73f7e59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "توضیح لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "show_in_menu": {
                                        "oneOf": [
                                            {
                                                "description": "1 = yes",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = no",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "parent_id": {
                                        "description": "ParentID.This field is optional when creating or updating the category.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful category and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/status/{category}": {
            "get": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "Change the status of a category",
                "description": "This endpoint `toggles the status of a ProductCategory` (active/inactive)",
                "operationId": "updateProductCategoryStatus",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ProductCategory id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductCategory status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت دسته x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/show-in-menu/{category}": {
            "get": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "Change the show-in-menu status of a ProductCategory",
                "description": "This endpoint `toggles the status of a ProductCategory to be Shown in menu` (active/inactive)",
                "operationId": "updateProductCategoryShowInMenuStatus",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ProductCategory id to change the show-in-menu status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductCategory show-in-menu status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت نمایش در منوی دسته x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/update/{category}": {
            "post": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "update an existing category",
                "description": "this method updates an exisiting `ProductCategory` and stores its related tags.",
                "operationId": "ed16390268949d7e9d3bf4011f4c1a27",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "توضیح لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "show_in_menu": {
                                        "oneOf": [
                                            {
                                                "description": "1 = yes",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = no",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "parent_id": {
                                        "description": "ParentID.This field is optional when creating or updating the category.",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "لوازم ورزشی"
                                        }
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful category and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/category/destroy/{category}": {
            "delete": {
                "tags": [
                    "ProductCategory"
                ],
                "summary": "Delete a ProductCategory",
                "description": "This endpoint allows the user to `delete an existing ProductCategory`.",
                "operationId": "deleteProductCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The ID of the ProductCategory to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductCategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته Example category با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/{province}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Retrieve list of all `Cities` of a province",
                "description": "Retrieve list of all `Cities` of a province",
                "operationId": "222e49093b940c085981929ca582c4c9",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "province id to fetch its Cities",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of `Cities` of a specisl province",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/City"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/search/{province}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Searches among ProductColor by name.",
                "description": "This endpoint allows users to search for `Cities of A Province` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "b87f034f05509c4aa948bf2ddca01b81",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "Id of province that you want search fo its Cities",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of City which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Cities of a Province",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/City"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/show/{city}": {
            "get": {
                "tags": [
                    "City",
                    "City/Form"
                ],
                "summary": "Returns City details for edit form",
                "description": "Returns `City` details with its province for edit form",
                "operationId": "8bf590a7a5144ec27a89dfb24672568c",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "Id of city that you want showing",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A City with its province",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/store/{province}": {
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "create new city for a special province",
                "description": "this method creates a new `City` for the province and stores it.",
                "operationId": "b44940cdbf5446863de6a882d1a323d7",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "ID of the province to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF ]+$",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful City creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "شهر x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/update/{city}": {
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "updates an exisiting `City",
                "description": "this method updates an exisiting `City` and saves changes.",
                "operationId": "b2475cd0fbf5b86455712a9e097c8938",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "ID of the city to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF ]+$",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful City update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "شهر x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/city/destroy/{city}": {
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete a ProductCategory",
                "description": "This endpoint allows the user to `delete an existing City`.",
                "operationId": "deleteCityy",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "The ID of the City to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "شهر Example city با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment": {
            "get": {
                "tags": [
                    "Comment",
                    "ProductComment"
                ],
                "summary": "Get product comments",
                "description": "Retrieves a paginated list of comments related to products. Also updates the 'seen' status of unseen comments.",
                "operationId": "80571c5b22cc39386a786121ce24604b",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment/search": {
            "get": {
                "tags": [
                    "Comment",
                    "ProductComment"
                ],
                "summary": "Searchs among ProductComments by keyword in comment body",
                "description": "This endpoint allows users to search for `Comments` by keyword in comment body. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "be1e711f09b5c49726b118365ab03fe3",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type keyword which you're searching for in body of Comment",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Comments with their relations: commentable,parent and author",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment/show/{comment}": {
            "get": {
                "tags": [
                    "Comment",
                    "ProductComment",
                    "ProductComment/Form"
                ],
                "summary": "Get details of a specific Comment",
                "description": "Returns the `ProductComment` details along with commentable,parent and author and provide details for edit method.",
                "operationId": "getProductCommentDetails",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ID of the Comment to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment Details with its relations: commentable,parent and author",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment/answer/{comment}": {
            "post": {
                "tags": [
                    "Comment",
                    "ProductComment"
                ],
                "summary": "Reply to a customer comment",
                "description": "This endpoint allows an admin to `reply to customer comments`. Only comments without replies can be answered.",
                "operationId": "answerComment",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "The ID of the comment to be replied to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "body"
                                ],
                                "properties": {
                                    "body": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symboles (-.,?؟.،). Any other characters will result in a validation error",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "Thank you for your feedback, your order is being processed."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پاسخ نظر با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ارسال پاسخ با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The comment has already been replied to",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "امکان ارسال پاسخ به این نظر وجود ندارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment/status/{comment}": {
            "get": {
                "tags": [
                    "ProductComment",
                    "Comment"
                ],
                "summary": "Change the status of a ProductComment",
                "description": "This endpoint `toggles the status of a ProductComment` (active/inactive)",
                "operationId": "updateProductCommentStatus",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ProductComment id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductComment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت نظر x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/comment/approved/{comment}": {
            "get": {
                "tags": [
                    "ProductComment",
                    "Comment"
                ],
                "summary": "Change the ProductComment's Approval State",
                "description": "This endpoint `toggles the ProductComment's Approval State` (active/inactive)",
                "operationId": "updateProductCommentApproved",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ProductComment id to change the approval state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductComment approval status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت تأییدیه نظر x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery": {
            "get": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Retrieve list of Delivery Methods",
                "description": "Retrieve list of all `Delivery Methods`",
                "operationId": "7568400474cada5a07ea55c4ed10b7cb",
                "responses": {
                    "200": {
                        "description": "A list of Dilivery methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Delivery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/search": {
            "get": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Searchs among Delivery methods by name",
                "description": "This endpoint allows users to search for `Delivery methods` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "f42d205179488d4ad1309a05e36a689a",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Delivery which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Delivery methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Delivery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/show/{delivery}": {
            "get": {
                "tags": [
                    "Delivery",
                    "Delivery/Form"
                ],
                "summary": "Get details of a specific Delivery",
                "description": "Returns the `Delivery` details and provide details for edit method.",
                "operationId": "getDeliveryyDetails",
                "parameters": [
                    {
                        "name": "delivery",
                        "in": "path",
                        "description": "ID of the delivery to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Delivery details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Delivery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/store": {
            "post": {
                "tags": [
                    "Delivery"
                ],
                "summary": "create new delivery",
                "description": "this method creates a new `Delivery method` and stores it",
                "operationId": "0aa4fa5c1ffc30f61f4ed063077405c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symobols (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پست ممتاز"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 125000
                                    },
                                    "delivery_time": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "delivery_time_unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symobols (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "ساعت"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Delivery creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "روش x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/status/{delivery}": {
            "get": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Change the status of a Delivery",
                "description": "This endpoint `toggles the status of a Delivery` (active/inactive)",
                "operationId": "updateDeliveryStatus",
                "parameters": [
                    {
                        "name": "delivery",
                        "in": "path",
                        "description": "Delivery id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت روش x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/update/{delivery}": {
            "put": {
                "tags": [
                    "Delivery"
                ],
                "summary": "updates an existing Delivery method",
                "description": "this method updates an existing `Delivery method` and save changes",
                "operationId": "72a90d4a5552f1054d5d3435e21409e3",
                "parameters": [
                    {
                        "name": "delivery",
                        "in": "path",
                        "description": "Delivery id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symobols (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پست ممتاز"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 125000
                                    },
                                    "delivery_time": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "delivery_time_unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symobols (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "ساعت"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Delivery update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "روش x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/destroy/{delivery}": {
            "delete": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Delete a Delivery",
                "description": "This endpoint allows the user to `delete an existing Delivery`.",
                "operationId": "deleteDelivery",
                "parameters": [
                    {
                        "name": "delivery",
                        "in": "path",
                        "description": "The ID of the delivery to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته Example delivery با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan": {
            "get": {
                "tags": [
                    "Discount",
                    "Copan"
                ],
                "summary": "Retrieve list of Copans",
                "description": "Retrieve list of all `Copans`",
                "operationId": "8abf49012403f97fe424d7cd27a5b49e",
                "responses": {
                    "200": {
                        "description": "A list of Copans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Copan"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/search": {
            "get": {
                "tags": [
                    "Discount",
                    "Copan"
                ],
                "summary": "Searchs among Copans by code",
                "description": "This endpoint allows users to search for `Copans` by code. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "4ff1d5ec582c59d3a1e93ad90dec65f1",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type code of Copan which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Copans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Copan"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/status/{copan}": {
            "get": {
                "tags": [
                    "Copan",
                    "Discount"
                ],
                "summary": "Change the status of a copan",
                "description": "This endpoint `toggles the status of a Copan` (active/inactive)",
                "operationId": "updateCopanStatus",
                "parameters": [
                    {
                        "name": "copan",
                        "in": "path",
                        "description": "Copan id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Copan status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت کوپن x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/options": {
            "get": {
                "tags": [
                    "Discount",
                    "Discount/Form",
                    "Copan/Form",
                    "AmazingSale/Form"
                ],
                "summary": "Get necessary options for Discount forms",
                "description": "This endpoint returns all `Users which can be used to create or edit a copan` and all `Products for create or edit a AmazingSale`",
                "operationId": "2cf765e41165f827dbad37a834764c1d",
                "responses": {
                    "200": {
                        "description": "Successfully fetched Users and Products that you may need to make create or edit form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "Users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "first_name": {
                                                                "type": "string"
                                                            },
                                                            "last_name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "Products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/show/{copan}": {
            "get": {
                "tags": [
                    "Copan",
                    "Copan",
                    "Copan/Form",
                    "Discount",
                    "Discount/Form"
                ],
                "summary": "Get details of a specific Copan",
                "description": "Returns the `Copan` details and provide details for edit method.",
                "operationId": "getCopanDetails",
                "parameters": [
                    {
                        "name": "copan",
                        "in": "path",
                        "description": "ID of the Copan to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Copan details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Copan"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/store": {
            "post": {
                "tags": [
                    "Copan",
                    "Discount"
                ],
                "summary": "create new copan",
                "description": "this method creates a new `Copan` and stores it.",
                "operationId": "b2453a0c1d18ec912bdec6833b8b9d41",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,،.). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "takhfif"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "discount_ceiling": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000
                                    },
                                    "amount_type": {
                                        "oneOf": [
                                            {
                                                "description": "1 = price unit",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = percentage",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "type": {
                                        "oneOf": [
                                            {
                                                "description": "1 = spicially for one user",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = commoun=> every user can use it",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "user_id": {
                                        "description": "UserID.This field must be null when copan type=2 and it will be required when copan type=1",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful copan craetion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کوپن x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام  الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/update/{copan}": {
            "put": {
                "tags": [
                    "Copan",
                    "Discount"
                ],
                "summary": "Update an existing copan",
                "description": "this method updates an existing `Copan` and saves change",
                "operationId": "f8f33c1ef6d9c01fc9e4a5c1c5dba38f",
                "parameters": [
                    {
                        "name": "copan",
                        "in": "path",
                        "description": "The ID of the Copan to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,،.). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "takhfif"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "discount_ceiling": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000
                                    },
                                    "amount_type": {
                                        "oneOf": [
                                            {
                                                "description": "1 = price unit",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = percentage",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "type": {
                                        "oneOf": [
                                            {
                                                "description": "1 = spicially for one user",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = commoun=> every user can use it",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "user_id": {
                                        "description": "UserID.This field must be null when copan type=2 and it will be required when copan type=1",
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": "true"
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful copan update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کوپن x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام  الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/copan/destroy/{copan}": {
            "delete": {
                "tags": [
                    "Copan",
                    "Discount"
                ],
                "summary": "Delete a Copan",
                "description": "This endpoint allows the user to `delete an existing Copan`.",
                "operationId": "deleteCopan",
                "parameters": [
                    {
                        "name": "copan",
                        "in": "path",
                        "description": "The ID of the Copan to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Copan deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کوپن Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount": {
            "get": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "Retrieve list of CommonDiscounts",
                "description": "Retrieve list of all `CommonDiscounts`",
                "operationId": "6ac8e459b94d8be70a22b27997a1018c",
                "responses": {
                    "200": {
                        "description": "A list of CommonDiscounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommonDiscount"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/search": {
            "get": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "Searchs among CommonDiscounts by title",
                "description": "This endpoint allows users to search for `CommonDiscounts` by title. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "111bfd2a3f50bb992c13fbbd9763a1e9",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type title of CommonDiscount which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of CommonDiscounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommonDiscount"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/status/{commonDiscount}": {
            "get": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "Change the status of a CommonDiscount",
                "description": "This endpoint `toggles the status of a CommonDiscount` (active/inactive)",
                "operationId": "updateCommonDiscountStatus",
                "parameters": [
                    {
                        "name": "commonDiscount",
                        "in": "path",
                        "description": "CommonDiscount id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CommonDiscount status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت تخفیف عمومی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/show/{commonDiscount}": {
            "get": {
                "tags": [
                    "CommonDiscount",
                    "CommonDiscount/Form",
                    "Discount",
                    "Discount/Form"
                ],
                "summary": "Get details of a specific CommonDiscount",
                "description": "Returns the `CommonDiscount` details for edit method.",
                "operationId": "getCommonDiscountDetails",
                "parameters": [
                    {
                        "name": "commonDiscount",
                        "in": "path",
                        "description": "ID of the CommonDiscount to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched CommonDiscount details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonDiscount"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/store": {
            "post": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "create new CommonDiscount",
                "description": "this method creates a new `CommonDiscount` and stores it",
                "operationId": "077bef1ffe0a34f1ae266945cfbb0feb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (symobls (.,.،)). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?,.،]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "percentage": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "discount_ceiling": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "minimal_order_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000000
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful CommonDiscount creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تخفیف عمومی با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/update/{commonDiscount}": {
            "put": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "create new CommonDiscount",
                "description": "this method updates an existing `CommonDiscount` and stores it",
                "operationId": "1877af6d71d4a3a2c2b9adb0452a7bbb",
                "parameters": [
                    {
                        "name": "commonDiscount",
                        "in": "path",
                        "description": "CommonDiscount id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symobls (.,.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "percentage": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "discount_ceiling": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "minimal_order_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000000
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful CommonDiscount update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تخفیف عمومی با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/common-discount/destroy/{commonDiscount}": {
            "delete": {
                "tags": [
                    "CommonDiscount",
                    "Discount"
                ],
                "summary": "Delete a CommonDiscount",
                "description": "This endpoint allows the user to `delete an existing CommonDiscount`.",
                "operationId": "deletecommonDiscount",
                "parameters": [
                    {
                        "name": "commonDiscount",
                        "in": "path",
                        "description": "The ID of the CommonDiscount to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CommonDiscount deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تخفیف عمومی  با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale": {
            "get": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "Retrieve list of categories",
                "description": "Retrieve list of all `AmazingSale`",
                "operationId": "c0a4eff62d7d2215a751890ebaa68c4a",
                "responses": {
                    "200": {
                        "description": "A list of AmazingSales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AmazingSale"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/search": {
            "get": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "Searchs among AmazingSales by name",
                "description": "This endpoint allows users to search for `AmazingSales` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "facb23aade09c80e2ff3787e21abfcc0",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of product which you're searching for its AmazingSale",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of AmazingSales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AmazingSale"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/status/{amazingSale}": {
            "get": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "Change the status of a AmazingSale",
                "description": "This endpoint `toggles the status of a AmazingSale` (active/inactive)",
                "operationId": "updateAmazingSaleStatus",
                "parameters": [
                    {
                        "name": "amazingSale",
                        "in": "path",
                        "description": "AmazingSale id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AmazingSale status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/show/{amazingSale}": {
            "get": {
                "tags": [
                    "AmazingSale",
                    "AmazingSale/Form",
                    "Discount",
                    "Discount/Form"
                ],
                "summary": "Get details of a specific AmazingSale",
                "description": "Returns the `AmazingSale` details and provide details for edit method.",
                "operationId": "getAmazingSaleDetails",
                "parameters": [
                    {
                        "name": "amazingSale",
                        "in": "path",
                        "description": "ID of the AmazingSale to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched AmazingSale details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AmazingSale"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/store": {
            "post": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "create new AmazingSale",
                "description": "this method creates a new `AmazingSale` and stores it.",
                "operationId": "ed45188c6e76e1b5a4bdb4172e972a9d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "percentage": {
                                        "type": "number",
                                        "maximum": "100",
                                        "minimum": "0",
                                        "example": 7
                                    },
                                    "product_id": {
                                        "description": "ProductID.Id of the product for which the special amaingsale discount is being created ",
                                        "type": "integer",
                                        "example": 12,
                                        "nullable": "true"
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful AmazingSale creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت به فروش شگفت انگیز افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وارد کردن محصول الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/update/{amazingSale}": {
            "put": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "Updates an existing AmazingSale",
                "description": "this method updates an existing `AmazingSale` and saves it.",
                "operationId": "b156f9198fad5ef13ff3afdcd79be7f4",
                "parameters": [
                    {
                        "name": "amazingSale",
                        "in": "path",
                        "description": "AmazingSale id to fetch record",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "percentage": {
                                        "type": "number",
                                        "maximum": "100",
                                        "minimum": "0",
                                        "example": 7
                                    },
                                    "product_id": {
                                        "description": "ProductID.Id of the product for which the special amaingsale discount is being created ",
                                        "type": "integer",
                                        "example": 12,
                                        "nullable": "true"
                                    },
                                    "start_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "end_date": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful AmazingSale update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول فروش شگفت انگیز با موفقیت ویرایش شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وارد کردن محصول الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/discount/amazing-sale/destroy/{amazingSale}": {
            "delete": {
                "tags": [
                    "AmazingSale",
                    "Discount"
                ],
                "summary": "Delete a AmazingSale",
                "description": "This endpoint allows the user to `delete an existing AmazingSale`.",
                "operationId": "deleteAmazingSaley",
                "parameters": [
                    {
                        "name": "amazingSale",
                        "in": "path",
                        "description": "The ID of the AmazingSale to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AmazingSale deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت از لیست فروش شگفت انگیز حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/{product}": {
            "get": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Retrieve list of `Gallery` with it product",
                "description": "Retrieve list of all `ProductImages` with their product",
                "operationId": "5f44196e1f745e315aeba8d6c7a6dd86",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id to fetch its Images",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of `Gallery` with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Gallery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/search/{product}": {
            "get": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Searches among Galleries by name.",
                "description": "This endpoint allows users to search for `Gallery` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "7fd29760724ed545c513895e90775b99",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of product that you want search fo its guarantee",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Gallery which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Gallery with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Gallery"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/show/{gallery}": {
            "get": {
                "tags": [
                    "Gallery",
                    "Gallery/Form"
                ],
                "summary": "Returns Gallery details for edit form",
                "description": "Returns `Gallery` details with its product for edit form",
                "operationId": "daf471af8838daf4b73409be176bf152",
                "parameters": [
                    {
                        "name": "gallery",
                        "in": "path",
                        "description": "Id of Gallery that you want showing",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Gallery with its product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gallery"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/store/{product}": {
            "post": {
                "tags": [
                    "Gallery"
                ],
                "summary": "create new value for a Gallery",
                "description": "this method creates a new `Gallery` for the product and stores it.",
                "operationId": "f092c075176256b6c8eba77a8b5dcd90",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "/path/image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Gallery creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تصویر گالری با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/update/{gallery}": {
            "post": {
                "tags": [
                    "Gallery"
                ],
                "summary": "update an existing Gallery",
                "description": "this method updates an existing `Gallery` for the product and stores it.",
                "operationId": "0712c356e82cad206051038a4d08ee0d",
                "parameters": [
                    {
                        "name": "gallery",
                        "in": "path",
                        "description": "ID of the gallery to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "/path/image.jpg"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Gallery update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تصویر گالری با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/gallery/destroy/{gallery}": {
            "delete": {
                "tags": [
                    "Gallery"
                ],
                "summary": "Delete a Gallery",
                "description": "This endpoint allows the user to `delete an existing Gallery`.",
                "operationId": "deleteGallery",
                "parameters": [
                    {
                        "name": "gallery",
                        "in": "path",
                        "description": "The ID of the Gallery to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تصویر گالری با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get a list of orders with optional filtering",
                "description": "Retrieve a paginated `list of orders with optional filtering based on order status, payment status, and delivery status`.",
                "operationId": "c1b5b92989231d917e4c13f057ae7dc0",
                "parameters": [
                    {
                        "name": "order_status",
                        "in": "query",
                        "description": "Filter by order status. Possible values: unseen, processing, not-approved, approved, canceled, returned",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "processing,canceled"
                        }
                    },
                    {
                        "name": "payment_status",
                        "in": "query",
                        "description": "Filter by payment status. Possible values: unpaid, paid, canceled, returned",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "paid,unpaid"
                        }
                    },
                    {
                        "name": "delivery_status",
                        "in": "query",
                        "description": "Filter by delivery status. Possible values: not_sending, sending, sent, delivered",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "sending,delivered"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "باشد یا چند مورد به وسیله کاما از هم جدا شده باشد unpaid, paid, canceled, returned فیلد وضعیت پرداخت  باید یکی از موارد'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order/show/{order}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get order details",
                "description": "Retrieves the details of a specific order along with its related data.",
                "operationId": "0e7917733b8771073477efa297c88fa0",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "The unique identifier of the order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 24
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Comma-separated list of additional relationships to load. Available values: address, payment, delivery, copan, commonDiscount, orderItems,orderItems.product, orderItems.amazingSale",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "payment,delivery,orderItems.product,orderItems.amazingSale"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        {
                                            "properties": {
                                                "orderItems": {
                                                    "description": "OrderItems details",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrderItem"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order/change-send-status/{order}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Change the delivery status of an order",
                "description": "`Updates the delivery status of a given order and progresses it to the next stage` in every request.",
                "operationId": "29d8b594c1ac15db8a22d298dd610d66",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "The ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت ارسال به ارسال شد تغییر کرد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order/change-order-status/{order}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Change Order Status",
                "description": "`Updates the order status to the next stage` in every request.",
                "operationId": "45651109a3fec85c96b07d72d26975a3",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت سفارش به ارسال شده تغییر کرد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order/cancel-order/{order}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Cancel an Order",
                "description": "Changes the order status to 'Canceled'.",
                "operationId": "83e411bee5a9decde1aa9d359819c08d",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order successfully canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سفارش باطل شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/order/tracking-post-code/{order}": {
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Add or update postal tracking code",
                "description": "Allows the user to add or update the postal tracking code for shipped orders.",
                "operationId": "bf2b1cc1a0610d3fd91f1c7f940c986b",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "The ID of the order to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "postal_tracking_code": {
                                        "type": "string",
                                        "example": "44417589650235698754"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Postal tracking code successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کد رهگیری با موفقیت ثبت شد. در صورت تمایل می توانید ویرایش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot update postal tracking code for orders that are not shipped.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "امکان ثبت یا ویرایش کد رهگیری تنها برای سفارش های ارسال شده وجود دارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای پایگاه داده، لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/payment": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Retrieve a list of payments",
                "description": "This method retrieves a list of payments filtered by type and includes user information.",
                "operationId": "getAllPayments",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Payment type: `online`, `offline`, `cash`",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "online",
                                "offline",
                                "cash"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred on the server. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/payment/show/{payment}": {
            "get": {
                "tags": [
                    "Payment",
                    "Payment/Form"
                ],
                "summary": "Get details of a specific Payment",
                "description": "Returns the `Payment` details and provide details for edit method.",
                "operationId": "getPaymentDetails",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "description": "ID of the Payment to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Payment details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/payment/canceled/{payment}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Cancel a Payment",
                "description": "Changes the Payment status to 'Canceled'.",
                "operationId": "0cbfdc40a0b623694aa4472de8db7ea1",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment successfully canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تغییرات با موفقیت اعمال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/payment/returned/{payment}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Return a Payment",
                "description": "Changes the Payment status to 'Returned'.",
                "operationId": "261fa5d5f0bc647f3cfc9eaa43e26540",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment successfully returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تغییرات با موفقیت اعمال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/{product}": {
            "get": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "Retrieve list of `Colors` with their product",
                "description": "Retrieve list of all `ProductColors` with their product",
                "operationId": "e7cdec36db941c34a492589fb0692cd1",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id to fetch its Colors",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of `Colors` with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductColor"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/search/{product}": {
            "get": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "Searches among ProductColor by name.",
                "description": "This endpoint allows users to search for `ProductColor` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "34463aad45247db05de9557f07705d12",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of product that you want search fo its ProductColor",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Color which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Color with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductColor"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/show/{color}": {
            "get": {
                "tags": [
                    "ProductColor",
                    "ProductColor/Form"
                ],
                "summary": "Returns ProductColor details for edit form",
                "description": "Returns `ProductColor` details with its product for edit form",
                "operationId": "bd732647f02bb0dbbaf06288f78236fe",
                "parameters": [
                    {
                        "name": "color",
                        "in": "path",
                        "description": "Id of color that you want showing",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ProductColor with its product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductColor"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/{product}/store": {
            "post": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "create new value for a ProductColor",
                "description": "this method creates a new `ProductColor` for the product and stores it.",
                "operationId": "32bd478467a3d8074380848d54dd1403",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "color_name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Guarantee creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "رنگ با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/status/{color}": {
            "get": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "Change the status of a color",
                "description": "This endpoint `toggles the status of a ProductColor` (active/inactive)",
                "operationId": "updateProductColorStatus",
                "parameters": [
                    {
                        "name": "color",
                        "in": "path",
                        "description": "Color id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت رنگ محصول x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/update/{color}": {
            "put": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "update an existing ProductColor",
                "description": "this method updates an existing `ProductColor` for the product and stores it.",
                "operationId": "92b236d5b53f6edd6005a11f3032687f",
                "parameters": [
                    {
                        "name": "color",
                        "in": "path",
                        "description": "ID of the ProductColor to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "color_name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "سفید"
                                    },
                                    "color": {
                                        "type": "#111111"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 600000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful ProductColor update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "رنگ با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/color/destroy/{color}": {
            "delete": {
                "tags": [
                    "ProductColor"
                ],
                "summary": "Delete a ProductColor",
                "description": "This endpoint allows the user to `delete an existing ProductColor`.",
                "operationId": "deleteProductColor",
                "parameters": [
                    {
                        "name": "color",
                        "in": "path",
                        "description": "The ID of the ProductColor to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductColor deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "رنگ با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product": {
            "get": {
                "tags": [
                    "Product",
                    "Store"
                ],
                "summary": "Retrieve list of products",
                "description": "Retrieve list of all `Products`",
                "operationId": "6f3289fa24ea7b70484a27e47e35312e",
                "responses": {
                    "200": {
                        "description": "A list of Products with relations Brand, Category, Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/search": {
            "get": {
                "tags": [
                    "Product",
                    "Store"
                ],
                "summary": "Searchs among products by name",
                "description": "This endpoint allows users to search for products by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "77c832b31a76a71462078c881303b4db",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of product which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of products with relations Brand, Category, Tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/status/{product}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Change the status of a product",
                "description": "This endpoint toggles the status of a product (active/inactive)",
                "operationId": "updateProductStatus",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت محصول با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/store": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "create new product",
                "description": "this method creates a new product and stores its related tags and metadata. The product must have a name, price, and category,...,tags , while metadata are optional. If provided, they will be saved alongside the product.",
                "operationId": "199c157f1780bc5cac69e1152cf7e976",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لپ تاپ ایسوس مدل s540"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 35000000
                                    },
                                    "category_id": {
                                        "description": "Category ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "brand_id": {
                                        "description": "Brand ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "introduction": {
                                        "type": "string",
                                        "example": "لپ‌تاپ گیمینگ با پردازنده Core i7"
                                    },
                                    "status": {
                                        "description": "1 = active, 2 = inactive",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "marketable": {
                                        "oneOf": [
                                            {
                                                "description": "1 = marketable",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = none marketable",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "related_products[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "آیا api خوب است؟"
                                        }
                                    },
                                    "meta_key[]": {
                                        "description": "This field is nullable but not if meta_value[] is existed unless you will have a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "حسگر اثر انگشت"
                                        }
                                    },
                                    "meta_value[]": {
                                        "description": "This field is nullable but not if meta_key[] is existed unless you will have a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "دارد"
                                        }
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful product and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام محصول الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/show/{product}": {
            "get": {
                "tags": [
                    "Product",
                    "Product/Form",
                    "Store",
                    "Store/Form"
                ],
                "summary": "Get details of a specific product",
                "description": "Returns the `product` details along with related products, categories, and brands. The product itself is removed from the `products` list to prevent self-selection in related products for editing. The `relatedProducts` field is returned as an array instead of a comma-separated string to simplify frontend processing in edit method",
                "operationId": "getProductDetails",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Comma-separated list of additional relations to include (e.g. 'orderItems,cartItems,metas,colors,images,guarantees,attributes,values,amazingSales,comments,users')",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched product details, related products, and other products for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "product": {
                                                    "$ref": "#/components/schemas/Product"
                                                },
                                                "related_products[]": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Gaming Mouse"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/options": {
            "get": {
                "tags": [
                    "Product",
                    "Product/Form"
                ],
                "summary": "Get necessary options for product forms",
                "description": "This endpoint returns all `productCategories`, `brands`, and `products`, which can be used to create a new product or edit method",
                "operationId": "ca00993c51f2012b80014e709a8cae74",
                "responses": {
                    "200": {
                        "description": "Successfully fetched product categories, brands, and products that you may need to make edit,create,.. pages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "productCategories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "brands": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "persian_name": {
                                                                "type": "string"
                                                            },
                                                            "original_name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/update/{product}": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Update an existing product",
                "description": "This endpoint allows the user to update an existing product, including its image, category, tags, and meta information",
                "operationId": "25f4e2395fc80951992cc96d88e4abf1",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "The ID of the product to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "لپ تاپ ایسوس مدل s540"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 35000000
                                    },
                                    "category_id": {
                                        "description": "Category ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "brand_id": {
                                        "description": "Brand ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "width": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "length": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "introduction": {
                                        "type": "string",
                                        "example": "لپ‌تاپ گیمینگ با پردازنده Core i7"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "marketable": {
                                        "oneOf": [
                                            {
                                                "description": "1 = marketable",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = none marketable",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "related_products[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "tags[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "آیا api خوب است؟"
                                        }
                                    },
                                    "meta_key[]": {
                                        "description": "This field is nullable but not if meta_value[] is existed unless you will have a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "حسگر اثر انگشت"
                                        }
                                    },
                                    "meta_value[]": {
                                        "description": "This field is nullable but not if meta_key[] is existed unless you will have a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "دارد"
                                        }
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful product and tags update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت ویرایش شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام محصول الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/destroy/{product}": {
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "description": "This endpoint allows the user to delete an existing product.",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "The ID of the product to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول Example Product با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مشکلی پیش آمده است. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/delete-meta/{meta}": {
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a productMeta",
                "description": "This endpoint allows the user to delete an existing productMeta.",
                "operationId": "deleteProductMeat",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "The ID of the productMeat to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductMeat deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ویژگی محصول با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مشکلی پیش آمده است. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/{product}": {
            "get": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "Retrieve list of `Guarantees` with their product",
                "description": "Retrieve list of all `Guarantees` with their product",
                "operationId": "0abeb0982fcbf076eb1fe917b5252eb4",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id to fetch its guarantees",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of `Guarantees` with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Guarantee"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/search/{product}": {
            "get": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "Searches among Guarantees by name.",
                "description": "This endpoint allows users to search for `Guarantee` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "17447f7ba455cef8267dfa52ac6e4970",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of product that you want search fo its guarantee",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Guarantee which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Guarantee with their product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Guarantee"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/show/{guarantee}": {
            "get": {
                "tags": [
                    "Guarantee",
                    "Guarantee/Form"
                ],
                "summary": "Returns Guarantee details for edit form",
                "description": "Returns `Guarantee` details with its product for edit form",
                "operationId": "387a61a564cb1a1f6622963bfc7f0bb3",
                "parameters": [
                    {
                        "name": "guarantee",
                        "in": "path",
                        "description": "Id of guarantee that you want showing",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Guarantee with its product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guarantee"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/{product}/store": {
            "post": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "create new value for a Guarantee",
                "description": "this method creates a new `Guarantee` for the product and stores it.",
                "operationId": "e2dde8a7086a3f60863fd0d1ea7d992d",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Guarantee creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "گارانتی با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/status/{guarantee}": {
            "get": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "Change the status of a guarantee",
                "description": "This endpoint `toggles the status of a Guarantee` (active/inactive)",
                "operationId": "updateGuaranteeStatus",
                "parameters": [
                    {
                        "name": "guarantee",
                        "in": "path",
                        "description": "Guarantee id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guarantee status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت گارانتی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/update/{guarantee}": {
            "put": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "update an existing Guarantee",
                "description": "this method updates an existing `Guarantee` for the product and stores it.",
                "operationId": "35325d85bc4c7e3e2fe6df28cdbfe599",
                "parameters": [
                    {
                        "name": "guarantee",
                        "in": "path",
                        "description": "ID of the guarantee to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "گارانتی سازگار"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Guarantee update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "گارانتی با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/guarantee/destroy/{guarantee}": {
            "delete": {
                "tags": [
                    "Guarantee"
                ],
                "summary": "Delete a Guarantee",
                "description": "This endpoint allows the user to `delete an existing guarantee`.",
                "operationId": "deleteGuarantee",
                "parameters": [
                    {
                        "name": "guarantee",
                        "in": "path",
                        "description": "The ID of the guarantee to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guarantee deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "گارانتی با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/properties/{product}": {
            "get": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "Retrieve list of product attributes",
                "description": "Retrieve list of all `categoryAtttributes` with their `category` which belongs to a product",
                "operationId": "getProductProperties",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of Product that we want its attributes",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of productProperties with their category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryAttribute"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "create new property for the product",
                "description": "this method creates a new property for the product and stores it.",
                "operationId": "6e2422485464ee669632d35b0117fb05",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پردازنده"
                                    },
                                    "unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "هرتز"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful product attribute creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ویژگی با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/properties/search/{product}": {
            "get": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "Searches among productAttributes by name",
                "description": "This endpoint allows users to search for `categoryAttributes` by name.These attributes belongs to a `category` of product The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "searchProductProperties",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of Product that we want its attributes",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of property which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of productProperties with their category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryAttribute"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/properties/show/{attribute}": {
            "get": {
                "tags": [
                    "ProductProperty",
                    "ProductProperty/Form"
                ],
                "summary": "Shows productAttribute by id",
                "description": "This endpoint provides the necessary data for editing or creating a ProductValue or editing productAttribute a and allows users to show `categoryAttribute` with its category",
                "operationId": "showProductProperty",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "Id of Attribute that we want",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CategoryAttribute` object with its category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryAttribute"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/properties/{attribute}": {
            "put": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "update existing property of the product",
                "description": "this method updates exising property of the product and saves changes",
                "operationId": "8647fc1813038f558e65a83a9ac81172",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "ID of the attribute to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پردازنده"
                                    },
                                    "unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "هرتز"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful product attribute update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ویژگی با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/property-values/{product}/{attribute}": {
            "get": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "Retrieve list of values of a special attribute of especial product",
                "description": "Retrieve list of all `categoryValues` which belongs to a special productAttribute",
                "operationId": "getProductProperty Values",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of Product that we want its attribute values",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "Id of attribute that we want its attribute values",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of productProperty values",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryValue"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/property-values/store/{product}/{attribute}": {
            "post": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "create new value for product attribute",
                "description": "this method creates a new `propertyValue` for the product and stores it.",
                "operationId": "04901ae48aabac3fcca6f8fa6181c227",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "ID of the attribute to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    },
                                    "type": {
                                        "description": "value type: 1 = multiple values select by customers (effects on price), 2 = simple",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful product attributeValue creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/product/property-values/update/{value}": {
            "put": {
                "tags": [
                    "ProductProperty"
                ],
                "summary": "update existing productAttribute value",
                "description": "this method updates existing `propertyValue` for the product and save changes.",
                "operationId": "5ca090348ac468336da3d9312501f91e",
                "parameters": [
                    {
                        "name": "value",
                        "in": "path",
                        "description": "ID of the value to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    },
                                    "type": {
                                        "description": "value type: 1 = multiple values select by customers (effects on price), 2 = simple",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful product attributeValue update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property": {
            "get": {
                "tags": [
                    "CategoryAttribute"
                ],
                "summary": "Retrieve list of CategoryAttributes with their category",
                "description": "Retrieve list of all CategoryAttributes with their category",
                "operationId": "8fff2231741002b19249075ed09221f9",
                "responses": {
                    "200": {
                        "description": "A list of CategoryAttributes with their category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryAttribute"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/search": {
            "get": {
                "tags": [
                    "CategoryAttribute"
                ],
                "summary": "Searches among CategoryAttributes by name.",
                "description": "This endpoint allows users to search for `CategoryAttributes` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "f0017a69ea17644512d7beeb79d11c10",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of CategoryAttribute which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of CategoryAttributes with their category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryAttribute"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/show/{attribute}": {
            "get": {
                "tags": [
                    "CategoryAttribute",
                    "CategoryAttribute/Form"
                ],
                "summary": "Get details of a specific attribute",
                "description": "Returns the `attribute` details along with category and provide details for edit method",
                "operationId": "getAttributeDetails",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "ID of the attribute to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched attribute details with category for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryAttribute"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/store": {
            "post": {
                "tags": [
                    "CategoryAttribute"
                ],
                "summary": "create new property",
                "description": "this method creates a new property and stores it.",
                "operationId": "751da47108eee4d33b580ec3281a5afb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پردازنده"
                                    },
                                    "unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "هرتز"
                                    },
                                    "category_id": {
                                        "description": "Category ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful product attribute creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فرم propertyName با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/options": {
            "get": {
                "tags": [
                    "CategoryAttribute",
                    "CategoryAttribute/Form"
                ],
                "summary": "Get necessary options for property forms",
                "description": "This endpoint returns all `productCategories` which can be used to create a new property or edit method",
                "operationId": "c15033a9293415318cb3ca19b8e7c7ad",
                "responses": {
                    "200": {
                        "description": "Successfully fetched product categories that you may need to make edit,create,.. pages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "productCategories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "status_value": {
                                                                "type": "string",
                                                                "example": "فعال"
                                                            },
                                                            "show_in_menu_value": {
                                                                "type": "string",
                                                                "example": "فعال"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/update/{attribute}": {
            "put": {
                "tags": [
                    "CategoryAttribute"
                ],
                "summary": "update an existing property",
                "description": "this method updates an existing property and stores it.",
                "operationId": "9bb96dba5f71f4febbbaf6aef3a0b8f4",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "The ID of the attribute to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "پردازنده"
                                    },
                                    "unit": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "هرتز"
                                    },
                                    "category_id": {
                                        "description": "Category ID. This must be provided when creating or updating the product.",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful product attribute update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فرم propertyName با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/destroy/{attribute}": {
            "delete": {
                "tags": [
                    "CategoryAttribute"
                ],
                "summary": "Delete a product",
                "description": "This endpoint allows the user to delete an existing attribute.",
                "operationId": "deleteAttribute",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "The ID of the attribute to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attribute deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فرم Example attribute با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/value/{attribute}": {
            "get": {
                "tags": [
                    "CategoryValue",
                    "CategoryValue/Form"
                ],
                "summary": "Retrieve Values of special peoperty and products which have same category with attribute for edit or create form",
                "description": "Retrieve `CategoryValues` of special peoperty  and also get list of `products` which have same category with attribute for create or edit method",
                "operationId": "262e6ed03e691181620883206a7c809b",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "attribute id to fetch its value",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of values which belongs to a special Property",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "values": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CategoryValue"
                                                    }
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/value/show/{value}": {
            "get": {
                "tags": [
                    "CategoryValue",
                    "CategoryValue/Form"
                ],
                "summary": "Get details of a specific value",
                "description": "Returns the `CategoryValue` details along with attribute and product for edit form",
                "operationId": "getValueDetails",
                "parameters": [
                    {
                        "name": "value",
                        "in": "path",
                        "description": "ID of the value to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched value details with product and attribute for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryValue"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/value/{attribute}/store": {
            "post": {
                "tags": [
                    "CategoryValue"
                ],
                "summary": "create new value for an attribute",
                "description": "this method creates a new `CategoryValue` for the attribute and stores it.",
                "operationId": "9f9a72dafd6924e840cc48f9db323c61",
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "path",
                        "description": "ID of the attribute to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    },
                                    "type": {
                                        "description": "value type: 1 = multiple values select by customers (effects on price), 2 = simple",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "Product ID. This must be provided when creating or updating the CategoryValue.",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful CategoryValue creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار جدید برای attributeName موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/value/update/{value}": {
            "put": {
                "tags": [
                    "CategoryValue"
                ],
                "summary": "Update an existing value",
                "description": "this method updates `CategoryValue` and stores it.",
                "operationId": "5ddf5dbab9f1e0c62cb6ac566a8d83e2",
                "parameters": [
                    {
                        "name": "value",
                        "in": "path",
                        "description": "ID of the value to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "2"
                                    },
                                    "price_increase": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60000
                                    },
                                    "type": {
                                        "description": "value type: 1 = multiple values select by customers (effects on price), 2 = simple",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "Product ID. This must be provided when creating or updating the CategoryValue.",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful CategoryValue update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار ویژگی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/property/value/destroy/{value}": {
            "delete": {
                "tags": [
                    "CategoryValue"
                ],
                "summary": "Delete a CtegoryValue",
                "description": "This endpoint allows the user to delete an existing `CtegoryValue` for a product.",
                "operationId": "deleteCategoryValu",
                "parameters": [
                    {
                        "name": "value",
                        "in": "path",
                        "description": "The ID of the value to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CategoryValue deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مقدار با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مشکلی پیش آمده است. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Retrieve list of Provinces",
                "description": "Retrieve list of all `Provinces`",
                "operationId": "91d6a7c7baa0fa3ae9371c5643632ff6",
                "responses": {
                    "200": {
                        "description": "A list of Provinces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Province"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province/search": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Searchs among Provinces by name",
                "description": "This endpoint allows users to search for `Province` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "21cefe2c0c8fea083391e7e3f526c868",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Province which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Provinces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Province"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province/store": {
            "post": {
                "tags": [
                    "Province"
                ],
                "summary": "create new Province",
                "description": "this method creates a new `Province`.",
                "operationId": "6b630a1bba9322ae87a0ba9b7a14e170",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persianh letters. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF\\s]+$",
                                        "example": "بوشهر"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Province creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "استان x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام استان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province/show/{province}": {
            "get": {
                "tags": [
                    "Province",
                    "Province/Form"
                ],
                "summary": "Get details of a specific Province",
                "description": "Returns the `Province` details along with their cities and provide details for edit method.",
                "operationId": "getProvinceDetails",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "ID of the Province to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Province details with cities for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province/update/{province}": {
            "put": {
                "tags": [
                    "Province"
                ],
                "summary": "updates an existing Province",
                "description": "this method updates an existing `Province`.",
                "operationId": "46293d7abd9fbd5545a76b1a867937f0",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "The ID of the Province to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persianh letters. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[\\u0600-\\u06FF\\s]+$",
                                        "example": "بوشهر"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Province update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "استان x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام استان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/delivery/province/destroy/{province}": {
            "delete": {
                "tags": [
                    "Province"
                ],
                "summary": "Delete a Province",
                "description": "This endpoint allows the user to `delete an existing Province`.",
                "operationId": "deleteProvince",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "The ID of the Province to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Province deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "استان x با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/store/store/{product}": {
            "post": {
                "tags": [
                    "Store"
                ],
                "summary": "create new value for a ProductStore",
                "description": "this method `increase ProductStore` for the product and stores it.",
                "operationId": "0d225432eeeb0cc0129026dea354b25b",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "receiver": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "دریافت کننده"
                                    },
                                    "deliverer": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "تحویل دهنده"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and hyphens (-). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "توضیحات"
                                    },
                                    "marketable_number": {
                                        "type": "number",
                                        "example": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful ProductStore creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "موجودی محصول x با موفقیت افزایش یافت"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/market/store/update/{product}": {
            "put": {
                "tags": [
                    "Store"
                ],
                "summary": "update an existing Product Store",
                "description": "this method updates an existing `Store` for the product and stores it.",
                "operationId": "d09e6ef3491944563457bfb89d631839",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "marketable_number": {
                                        "type": "number",
                                        "example": 6
                                    },
                                    "sold_number": {
                                        "type": "number",
                                        "example": 6
                                    },
                                    "frozen_number": {
                                        "type": "number",
                                        "example": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Store update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "موجودی محصول X با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notification/read-all": {
            "patch": {
                "tags": [
                    "Notification"
                ],
                "summary": "Mark all notifications as read",
                "description": "This endpoint marks all unread notifications as read.",
                "operationId": "readAll",
                "responses": {
                    "200": {
                        "description": "Notifications marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "همه اعلان ها به عنوان خوانده شده علامت دار شدند"
                                        },
                                        "read_notifications_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email": {
            "get": {
                "tags": [
                    "Email"
                ],
                "summary": "Retrieve list of emails",
                "description": "Retrieve list of all `Emails`",
                "operationId": "4c0254844322a73257420616eb5403fa",
                "responses": {
                    "200": {
                        "description": "A list of Emails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Email"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/search": {
            "get": {
                "tags": [
                    "Email"
                ],
                "summary": "Search among Emails by subject",
                "description": "This endpoint allows users to search for `Emails` by subject. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "591f099090818f43bc621fbf12f21608",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type subject of Email which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Emails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Email"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/show/{email}": {
            "get": {
                "tags": [
                    "Email",
                    "Email/Form"
                ],
                "summary": "Get details of a specific Email",
                "description": "Returns the `Email` details and provide details for edit method.",
                "operationId": "getEmailDetails",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "ID of the Email to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Email details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Email"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/store": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "create new Email",
                "description": "this method creates a new `Email` and stores it.",
                "operationId": "904af73eb0bbe20612194a2c90c81068",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "subject": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.,؟!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "حراج زمستانه"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "توضیح حراج زمستانه"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Email creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل با عنوان subject با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان ایمیل الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/status/{email}": {
            "get": {
                "tags": [
                    "Email"
                ],
                "summary": "Change the status of a Email",
                "description": "This endpoint `toggles the status of a Email` (active/inactive)",
                "operationId": "updateEmailStatus",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/update/{email}": {
            "put": {
                "tags": [
                    "Email"
                ],
                "summary": "Update an existing Email",
                "description": "this method Updates an existingw `Email` and saves it.",
                "operationId": "d9fce8b559698f425ea8f533b030121f",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "ID of the Email to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "subject": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.,؟!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                        "example": "حراج زمستانه"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "توضیح حراج زمستانه"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Email update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل با عنوان subject با موفقیت ویرایش شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان ایمیل الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/destroy/{email}": {
            "delete": {
                "tags": [
                    "Email"
                ],
                "summary": "Delete a Email",
                "description": "This endpoint allows the user to `delete an existing Email`.",
                "operationId": "deleteEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "The ID of the Email to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل با عنوان Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email/send-mail/{email}": {
            "get": {
                "tags": [
                    "Email"
                ],
                "summary": "Send Email To Users",
                "description": "This method `sends email to users through a job`",
                "operationId": "sendMail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "ID of Email To Send",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email Sends Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل x با موفقیت ارسال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مسیر مورد نظر یافت نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/{email}": {
            "get": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "Retrieve list of special Email Files",
                "description": "Retrieve list of all `Files` which belongs to an email",
                "operationId": "7dc786fb02d37ac4998c111288b8bc63",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "ID of the Email to fetch its files",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of EmailFiles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/search/{email}": {
            "get": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "Search email files by file type",
                "description": "Retrieve email files based on a search query for file type, filtered by a specific email ID.",
                "operationId": "searchEmailFiles",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "ID of the email",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter email files by file type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pdf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved email files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EmailFile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/status/{file}": {
            "get": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "Change the status of a EmailFile",
                "description": "This endpoint `toggles the status of a EmailFile` (active/inactive)",
                "operationId": "updateEmailFileStatus",
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "description": "EmailFile id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EmailFile status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/show/{file}": {
            "get": {
                "tags": [
                    "EmailFile",
                    "EmailFile/Form"
                ],
                "summary": "Get details of a specific EmailFile",
                "description": "Returns the `EmailFile` details and provide details for edit method.",
                "operationId": "getEmailFileDetails",
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "description": "ID of the EmailFile to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched EmailFile details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailFile"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/{email}/store": {
            "post": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "create new EmailFile",
                "description": "this method creates a new `EmailFile` and stores it.",
                "operationId": "64749fe2b2cec9cb1aef63170abfcb06",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s]+$",
                                        "example": "فایل ایمیل"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "path": {
                                        "description": "file is private or public?",
                                        "oneOf": [
                                            {
                                                "description": "1 = private",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = public",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful EmailFile creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فایل با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/update/{file}": {
            "post": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "Update an existing EmailFile",
                "description": "this method updates an existing `EmailFile` and stores it",
                "operationId": "539374d1e7750768dcc3756e353dd0b8",
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "description": "ID of the email file to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s]+$",
                                        "example": "فایل ایمیل"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "path": {
                                        "description": "file is private or public?",
                                        "oneOf": [
                                            {
                                                "description": "1 = private",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = public",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful EmailFile creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فایل با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/email-file/destroy/{file}": {
            "delete": {
                "tags": [
                    "EmailFile"
                ],
                "summary": "Delete a EmailFile",
                "description": "This endpoint allows the user to `delete an existing EmailFile`.",
                "operationId": "deleteEmailFile",
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "description": "The ID of the EmailFile to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EmailFile deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فایل با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/notify/email-file/open-file/{file}": {
            "get": {
                "tags": [
                    "Email Files"
                ],
                "summary": "Open or download an email file",
                "description": "Retrieves a file from storage or public directory and returns it for download. If the file does not exist, returns a 404 error.",
                "operationId": "openFile",
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "description": "ID of the email file",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File successfully retrieved",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فایل وجود ندارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred on the server. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Retrieve list of SMS",
                "description": "Retrieve list of all `SMS`",
                "operationId": "982f4c24e0aa650a9fa9839b213bbaf8",
                "responses": {
                    "200": {
                        "description": "A list of SMS",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SMS"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/search": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Searchs among SMS by title",
                "description": "This endpoint allows users to search for `SMS` by title. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "b98108c605faee887264b4b5c29b531c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type title of SMS which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SMS",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SMS"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/show/{sms}": {
            "get": {
                "tags": [
                    "SMS",
                    "SMS/Form"
                ],
                "summary": "Get details of a specific SMS",
                "description": "Returns the `SMS` details along with tags and provide details for edit method.",
                "operationId": "getSMSDetails",
                "parameters": [
                    {
                        "name": "sms",
                        "in": "path",
                        "description": "ID of the SMS to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched SMS details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SMS"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/store": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "create new SMS",
                "description": "this method creates a new `SMS` and stores it",
                "operationId": "50517d754ad3896a7a99709447fce428",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!]+$",
                                        "example": "حراج بهاره"
                                    },
                                    "body": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!]+$",
                                        "example": "توضیح حراج بهاره"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful SMS creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پیامک با عنوان x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/status/{sms}": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Change the status of a SMS",
                "description": "This endpoint `toggles the status of a SMS` (active/inactive)",
                "operationId": "updateSMSStatus",
                "parameters": [
                    {
                        "name": "sms",
                        "in": "path",
                        "description": "SMS id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/update/{sms}": {
            "put": {
                "tags": [
                    "SMS"
                ],
                "summary": "update an existing SMS",
                "description": "this method updates an existing `SMS` and stores it",
                "operationId": "000ce7ab726955a8244ba44d9deece9e",
                "parameters": [
                    {
                        "name": "sms",
                        "in": "path",
                        "description": "SMS id to fetch record",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!]+$",
                                        "example": "حراج بهاره"
                                    },
                                    "body": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (?!.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!]+$",
                                        "example": "توضیح حراج بهاره"
                                    },
                                    "published_at": {
                                        "type": "integer",
                                        "example": 1677030400
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful SMS update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پیامک با عنوان x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/destroy/{sms}": {
            "delete": {
                "tags": [
                    "SMS"
                ],
                "summary": "Delete a SMS",
                "description": "This endpoint allows the user to `delete an existing SMS`.",
                "operationId": "deleteSMS",
                "parameters": [
                    {
                        "name": "sms",
                        "in": "path",
                        "description": "The ID of the SMS to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پیامک با عنوان x با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/notify/sms/send-sms/{sms}": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send SMS To Users",
                "description": "This method `sends sms to users through a job`",
                "operationId": "sendSMS",
                "parameters": [
                    {
                        "name": "sms",
                        "in": "path",
                        "description": "ID of SMS To Send",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS Sends Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ارسال پیامک با موفقیت انجام شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مسیر مورد نظر یافت نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/setting": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Retrieve Setting Details",
                "description": "Retrieve `Setting Detail`",
                "operationId": "3275142fa9f178d64a44b9dc8ec5f38f",
                "responses": {
                    "200": {
                        "description": "Details Of site Setting",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/setting/update": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "summary": "Create an new or Update an existing Setting",
                "description": "this method Create an new or update an existing `Setting` and stores it.",
                "operationId": "b93e71915931ab8dabc90eea92ea157c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "آمازون"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "توضیحات آمازون"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "logo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "keywords[]": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, hyphens (-),question marks (?), and periods (.). Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?]+$",
                                            "example": "آیا api خوب است؟"
                                        }
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            },
                            "encoding": {
                                "tags[]": {
                                    "style": "form",
                                    "explode": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Setting update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تنظیمات با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/admin": {
            "get": {
                "tags": [
                    "TicketAdmin"
                ],
                "summary": "Retrieve list of TicketAdmins",
                "description": "Retrieve list of all `TicketAdmins`",
                "operationId": "ba5c08b577a949aa0a5d8209722cfdc9",
                "responses": {
                    "200": {
                        "description": "A list of TicketAdmins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/admin/search": {
            "get": {
                "tags": [
                    "TicketAdmin"
                ],
                "summary": "Searchs among TicketAdmins by first name or last name",
                "description": "This endpoint allows users to search for `TicketAdmins` by first name or last name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "64ecac12c492e1605860bda85769276b",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "typefirst name or last name of TicketAdmin which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of TicketAdmins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/admin/set/{admin}": {
            "get": {
                "tags": [
                    "TicketAdmin"
                ],
                "summary": "Add or remove admin user from ticket admins",
                "description": "Toggle the admin status of a user for ticket management",
                "operationId": "352b0c841450757233a36db4bd289e2e",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "UserAdmin ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربر به لیست ادمین های تیکت اضافه شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "برای افزودن کاربر به لیست ادمین ها مجوز ندارید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category": {
            "get": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "Retrieve list of TicketCategories",
                "description": "Retrieve list of all `TicketCategories`",
                "operationId": "e9aa0198b7cb24bb328006b3e6414008",
                "responses": {
                    "200": {
                        "description": "A list of TicketCategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TicketCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/search": {
            "get": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "Searchs among TicketCategories by name",
                "description": "This endpoint allows users to search for `TicketCategories` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "d7e591170dbc31e62c10da93f951e2b4",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of TicketCategory which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of TicketCategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TicketCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/show/{ticketCategory}": {
            "get": {
                "tags": [
                    "TicketCategory",
                    "TicketCategory/Form"
                ],
                "summary": "Get details of a specific TicketCategory",
                "description": "Returns the `TicketCategory` details and provide details for edit method.",
                "operationId": "getTicketCategoryDetails",
                "parameters": [
                    {
                        "name": "ticketCategory",
                        "in": "path",
                        "description": "ID of the TicketCategory to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched TicketCategory details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketCategory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/store": {
            "post": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "create new TicketCategory",
                "description": "this method creates a new `TicketCategory` and stores it.",
                "operationId": "fe8bedb178bfe0fb7a1d1b3281a195f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful TicketCategory creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/status/{ticketCategory}": {
            "get": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "Change the status of a TicketCategory",
                "description": "This endpoint `toggles the status of a TicketCategory` (active/inactive)",
                "operationId": "updateTicketCategoryStatus",
                "parameters": [
                    {
                        "name": "ticketCategory",
                        "in": "path",
                        "description": "TicketCategory id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TicketCategory status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت دسته x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/update/{ticketCategory}": {
            "put": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "Update an existing TicketCategory",
                "description": "this method update an existing `TicketCategory` and stores it.",
                "operationId": "c4e1d212aee065ba35f24ac85ecb3b0d",
                "parameters": [
                    {
                        "name": "ticketCategory",
                        "in": "path",
                        "description": "TicketCategory id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "لوازم ورزشی"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful TicketCategory update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/category/destroy/{ticketCategory}": {
            "delete": {
                "tags": [
                    "TicketCategory"
                ],
                "summary": "Delete a TicketCategory",
                "description": "This endpoint allows the user to `delete an existing TicketCategory`.",
                "operationId": "deleteTicketCategory",
                "parameters": [
                    {
                        "name": "ticketCategory",
                        "in": "path",
                        "description": "The ID of the TicketCategory to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TicketCategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسته Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get a paginated list of tickets",
                "description": "Retrieve a list of `customer tickets` with filtering options and update the seen status if needed.",
                "operationId": "getTickets",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter tickets by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "تیکت باز",
                                "تیکت بسته"
                            ],
                            "example": "تیکت باز"
                        }
                    },
                    {
                        "name": "seen",
                        "in": "query",
                        "description": "Filter tickets by seen status ( Seen, Unseen)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "تیکت جدید",
                                "تیکت دیده شده"
                            ],
                            "example": "تیکت دیده شده"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ticket"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/search": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Searchs among Tickets by subject",
                "description": "This endpoint allows users to search for `Tickets` by subject. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "76cce7573f7ac25ec216b3db2495f902",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type subject of Ticket which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ticket"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/show/{ticket}": {
            "get": {
                "tags": [
                    "Ticket",
                    "Ticket/Form"
                ],
                "summary": "Get details of a specific Ticket",
                "description": "Returns the `Ticket` details anlog its relations(`tiketFile, children`) and provide details for edit method.",
                "operationId": "getTicketDetails",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "ID of the Ticket to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Ticket details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Ticket"
                                        },
                                        {
                                            "properties": {
                                                "ticketFile": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "file_path": {
                                                            "type": "string",
                                                            "example": "files\\ticket-files\\2025-01-01\\16.jpg"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "children": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "example": "مشکل در رابطه با خرید محصول"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "توضیح مشکل خرید محصول"
                                                            },
                                                            "author_value": {
                                                                "description": "Ticket Author status: 'admin' if 1, 'customer' if 2",
                                                                "type": "string",
                                                                "example": "ادمین"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/change/{ticket}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Change the status of a Ticket",
                "description": "This endpoint `toggles the status of a Ticket` (open the Ticket/close the Ticket)",
                "operationId": "updateTicketStatus",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "Ticket id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تیکت x با موفقیت بسته شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/answer/{ticket}": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Reply to a customer Ticket",
                "description": "This endpoint allows an admin to `reply to customer Tickets`. Also this endpoint allows the admin to attach a file to his ticket",
                "operationId": "answerTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "The ID of the Ticket to be replied to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symboles (-.,?؟.،!). Any other characters will result in a validation error",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\,،]+$",
                                        "example": "Thank you for your feedback, your order is being processed."
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پاسخ شما با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ارسال پاسخ با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The discription is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "توضیحات الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority": {
            "get": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "Retrieve list of TicketPriorities",
                "description": "Retrieve list of all `TicketPriorities`",
                "operationId": "67e2cf97efca756cfbd95ea670bbce97",
                "responses": {
                    "200": {
                        "description": "A list of TicketPriority",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TicketPriority"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/search": {
            "get": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "Searchs among TicketPriorities by name",
                "description": "This endpoint allows users to search for `TicketPriorities` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "e12cc270d6d4304c27a7dd052436cf35",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of TicketPriority which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of TicketPriorities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TicketPriority"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/show/{ticketPriority}": {
            "get": {
                "tags": [
                    "TicketPriority",
                    "TicketPriority/Form"
                ],
                "summary": "Get details of a specific TicketPriority",
                "description": "Returns the `TicketPriority` details and provide details for edit method.",
                "operationId": "getTicketPriorityDetails",
                "parameters": [
                    {
                        "name": "ticketPriority",
                        "in": "path",
                        "description": "ID of the TicketPriority to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched TicketPriority details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketPriority"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/store": {
            "post": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "create new TicketPriority",
                "description": "this method creates a new `TicketPriority` and stores it.",
                "operationId": "6f1ec5448c2126076063ecea1128474f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "بسیار کم اهمیت"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful TicketPriority creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اولویت x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/status/{ticketPriority}": {
            "get": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "Change the status of a TicketPriority",
                "description": "This endpoint `toggles the status of a TicketPriority` (active/inactive)",
                "operationId": "updateTicketPriorityStatus",
                "parameters": [
                    {
                        "name": "ticketPriority",
                        "in": "path",
                        "description": "TicketPriority id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TicketPriority status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/update/{ticketPriority}": {
            "put": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "Update an existing TicketPriority",
                "description": "this method update an existing `TicketPriority` and stores it.",
                "operationId": "1f73fafb54254772695e53cb0259e6f1",
                "parameters": [
                    {
                        "name": "ticketPriority",
                        "in": "path",
                        "description": "TicketPriority id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "بسیار کم اهمیت"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful TicketPriority update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اولویت x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/ticket/priority/destroy/{ticketPriority}": {
            "delete": {
                "tags": [
                    "TicketPriority"
                ],
                "summary": "Delete a TicketPriority",
                "description": "This endpoint allows the user to `delete an existing TicketPriority`.",
                "operationId": "deleteTicketPriority",
                "parameters": [
                    {
                        "name": "ticketPriority",
                        "in": "path",
                        "description": "The ID of the TicketPriority to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TicketPriority deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اولویت Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve list of Admins",
                "description": "Retrieve list of all `Admins`",
                "operationId": "89a9785348a9884cc759057de9592715",
                "responses": {
                    "200": {
                        "description": "A list of Admins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/User"
                                            },
                                            {
                                                "properties": {
                                                    "roles": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "superadmin"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "permissions": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "delete-post"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/search": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Searchs among Admins by first name or last name",
                "description": "This endpoint allows users to search for `Admins` by first name or last name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "1fd6ceb989cc49fc76cad49d8f82c17f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "typefirst name or last name of Admin which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Admins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/User"
                                            },
                                            {
                                                "properties": {
                                                    "roles": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "superadmin"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "permissions": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "delete-post"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/show/{admin}": {
            "get": {
                "tags": [
                    "Admin",
                    "Admin/Form"
                ],
                "summary": "Get details of a specific Admin",
                "description": "Returns the `Admin` details and provide details for edit method.",
                "operationId": "getAdminDetails",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "ID of the Admin to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Admin details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        {
                                            "properties": {
                                                "roles": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "superadmin"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "permissions": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "delete-post"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/options": {
            "get": {
                "tags": [
                    "Admin",
                    "Admin/Form"
                ],
                "summary": "Get necessary options for admin forms",
                "description": "This endpoint returns all `Roles` and `Permissions`, which can be used to set role or permission for admins in roleStore and permissionStore methods",
                "operationId": "a6b1d02791d0160b919a088720f117da",
                "responses": {
                    "200": {
                        "description": "Successfully fetched Permissions and Roles that you may need to set role or permission for admin forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/store": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create new Admin",
                "description": "This method creates a new `Admin` and stores it.",
                "operationId": "c51ab3306e841e2d4c258ebaceaa5f4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "ایمان"
                                    },
                                    "last_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "مدائنی"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "S0h@6482"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "S0h@6482"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "example@gmail.com"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "09123654789"
                                    },
                                    "profile_photo_path": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "activation": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Admin creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/status/{admin}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Change the status of a Admin",
                "description": "This endpoint `toggles the status of a Admin` (active/inactive)",
                "operationId": "updateAdminStatus",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت فلانی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/activation/{admin}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Change the activation of a Admin",
                "description": "This endpoint `toggles the activation of a Admin` (active/inactive)",
                "operationId": "updateAdminActivation",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin id to change the activation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin activation state updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت فعالسازی فلانی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/update/{admin}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update an existing Admin",
                "description": "This method Update an existing `Admin` and stores it.",
                "operationId": "b93b3b5a960ecaaf8691061425b4e595",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "ایمان"
                                    },
                                    "last_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "مدائنی"
                                    },
                                    "profile_photo_path": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "activation": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Admin update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/destroy/{admin}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a Admin",
                "description": "This endpoint allows the user to `delete an existing Admin`.",
                "operationId": "deleteAdmin",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "The ID of the Admin to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/roles/{admin}/store": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update Admin Roles",
                "description": "This endpoint assigns new roles to an admin user.",
                "operationId": "rolesStore",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin user ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roles"
                                ],
                                "properties": {
                                    "roles": {
                                        "description": "List of role IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نقش های ادمین با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اجازه دسترسی به این متد را ندارید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/admin-user/permissions/{admin}/store": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update Admin Permissions",
                "description": "This endpoint assigns new Permissions to an admin user.",
                "operationId": "PermissionsStore",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "path",
                        "description": "Admin user ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "description": "List of permission IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسترسی های ادمین با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اجازه دسترسی به این متد را ندارید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Retrieve list of Customers",
                "description": "Retrieve list of all `Customers`",
                "operationId": "331d08becc59b3485c3309646a0f37f4",
                "responses": {
                    "200": {
                        "description": "A list of Customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/search": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Searchs among Customers by first name or last name",
                "description": "This endpoint allows users to search for `Customers` by first name or last name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "37b55d958b30b286fb36d2cc81c8935f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "typefirst name or last name of Customer which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/show/{customer}": {
            "get": {
                "tags": [
                    "Customer",
                    "Customer/Form"
                ],
                "summary": "Get details of a specific Customer",
                "description": "Returns the `Customer` details and provide details for edit method.",
                "operationId": "getCustomerDetails",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "ID of the Customer to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Customer details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/store": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create new Customer",
                "description": "This method creates a new `Customer` and stores it.",
                "operationId": "337e8500cf4c2bc85e86ca72ce9c9aad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "ایمان"
                                    },
                                    "last_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "مدائنی"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "S0h@6482"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "S0h@6482"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "example@gmail.com"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "09123654789"
                                    },
                                    "profile_photo_path": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "activation": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Customer creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/status/{customer}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Change the status of a Customer",
                "description": "This endpoint `toggles the status of a Customer` (active/inactive)",
                "operationId": "updateCustomerStatus",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "Customer id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت فلانی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/activation/{customer}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Change the activation of a Customer",
                "description": "This endpoint `toggles the activation of a Customer` (active/inactive)",
                "operationId": "updateCustomerActivation",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "Customer id to change the activation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer activation state updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت فعالسازی فلانی با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/update/{customer}": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update an existing Customer",
                "description": "This method Update an existing `Customer` and stores it.",
                "operationId": "06b108eedb0c77f73fdb843dcd4c7685",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "Customer id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "ایمان"
                                    },
                                    "last_name": {
                                        "description": "This field can only contain Persian and English letters and space. Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\ ]+$",
                                        "example": "مدائنی"
                                    },
                                    "profile_photo_path": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "activation": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Customer update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/customer/destroy/{customer}": {
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete a Customer",
                "description": "This endpoint allows the user to `delete an existing Customer`.",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "The ID of the Customer to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فلانی با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Retrieve list of Permissions",
                "description": "Retrieve list of all `Permissions`",
                "operationId": "b9fb1faa0c039c883fadc2db99195d8b",
                "responses": {
                    "200": {
                        "description": "A list of Permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/search": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Searchs among Permissions by name",
                "description": "This endpoint allows users to search for `Permissions` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "60d904b4cac8e49b2699a221e8fce75d",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Permission which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/show/{permission}": {
            "get": {
                "tags": [
                    "Permission",
                    "Permission/Form"
                ],
                "summary": "Get details of a specific Permission",
                "description": "Returns the `Permission` details and provide details for edit method.",
                "operationId": "getPermissionDetails",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "ID of the Permission to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Permission details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/store": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "create new Permission",
                "description": "this method creates a new `Permission` and stores it.",
                "operationId": "cd1eedd3ced23ab07e90021ae6043cb8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "delete-post"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,\\!\\?]+$",
                                        "example": "description-delete-post"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Permission creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسترسی با نام x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/status/{permission}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Change the status of a Permission",
                "description": "This endpoint `toggles the status of a Permission` (active/inactive)",
                "operationId": "updatePermissionStatus",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission id to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "checked": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "وضعیت x با موفقیت فعال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/update/{permission}": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update an existing Permission",
                "description": "this method Updates an existing `Permission` and stores it.",
                "operationId": "9b83e9f0bfa8ef4c1e310e976357233b",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "delete-post"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,\\!\\?]+$",
                                        "example": "description-delete-post"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Permission update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسترسی با نام x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/permission/destroy/{permission}": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete a Permission",
                "description": "This endpoint allows the user to `delete an existing Permission`.",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "The ID of the Permission to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسترسی با نام Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Retrieve list of Roles",
                "description": "Retrieve list of all `Roles`",
                "operationId": "9593c67d633edb17bfa8038b4e0a7c2c",
                "responses": {
                    "200": {
                        "description": "A list of Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/search": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Searchs among Roles by name",
                "description": "This endpoint allows users to search for `Roles` by name. The search is case-insensitive and returns results that contain the given keyword. The results are paginated for better performance",
                "operationId": "99d3af67eb68c19f87afbec2d1b36e70",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "type name of Role which you're searching for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/options": {
            "get": {
                "tags": [
                    "Role",
                    "Role/Form"
                ],
                "summary": "Get necessary options for Role forms",
                "description": "This endpoint returns all `Permissions` which can be used to create a new role and permission method",
                "operationId": "66fd6787467cb1264240d9ee76cdec2d",
                "responses": {
                    "200": {
                        "description": "Successfully fetched permissions that you may need to make create form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/show/{role}": {
            "get": {
                "tags": [
                    "Role",
                    "Role/Form"
                ],
                "summary": "Get details of a specific Role",
                "description": "Returns the `Role` details and provide details for edit method. also `permissionIds` in this method is specially provided details for permission method",
                "operationId": "getRoleDetails",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the Role to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Role details with tags for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "Role": {
                                                    "$ref": "#/components/schemas/Role"
                                                },
                                                "permissionIds": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/store": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "create new Role",
                "description": "this method creates a new `Role` and stores it.",
                "operationId": "8a9865089403242361c98f8331d0ed51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "superadmin"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,\\!\\?]+$",
                                        "example": "description of superadmin"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    },
                                    "permission_id[]": {
                                        "description": "This field can only contain integer Ids which exist in Permissions Table. Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Role creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نقش x با موفقیت افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/update/{role}": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update an existing Role",
                "description": "this method Updates an existing `Role` and stores it.",
                "operationId": "5f636c8fee5a9394a27f5d2d6f03e931",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "superadmin"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,!?). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,\\!\\?]+$",
                                        "example": "description of superadmin"
                                    },
                                    "status": {
                                        "oneOf": [
                                            {
                                                "description": "1 = active",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            {
                                                "description": "2 = inactive",
                                                "type": "integer",
                                                "example": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Role update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نقش x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/permission/{role}": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update Permissions of an existing Role",
                "description": "this method Updates Permissions of an existing `Role` and stores it.",
                "operationId": "eca25e95441edc258e8b101aa898f0bd",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permission_id": {
                                        "description": "This field can only contain integer Ids which exist in Permissions Table. Any other characters will result in a validation error.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful Role's Permissions update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "دسترسی های نقش x با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نام دسته بندی الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/role/destroy/{role}": {
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a Role",
                "description": "This endpoint allows the user to `delete an existing Role`.",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "The ID of the Role to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "نقش Example با موفقیت حذف شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registration",
                "description": "`Registers` a new user and send an email to verified entered email",
                "operationId": "afcc4c71c73eaf15048c904cac09d806",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "missastaneh@gmail.com"
                                    },
                                    "password": {
                                        "description": "password must be include letters,numbers and symbols and be uncompromised",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ex@mpl8N0risk7"
                                    },
                                    "password_confirmation": {
                                        "description": "This field must be same as password field exactly",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ex@mpl8N0risk7"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "با تشکر از ثبت نام شما. لینک تأیید ایمیل به ادرس ایمیل وارد شده ارسال گردید. لطفا ابتدا ایمیل خود را تأیید فرمایید"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفاً مجددا تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticates a user and returns an `access token`. also this method `deletes old user tokens for more saftfy`.",
                "operationId": "2b0c7f9d36d3c5b190b8760b8ae3633e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "missastaneh@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ex@mpl8N0risk7"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربری با این مشخصات یافت نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ابتدا ایمیل خود را تأیید کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفاً مجددا تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Logs out the authenticated user by deleting their token.",
                "operationId": "f664438447ee7ff1308105067170d379",
                "responses": {
                    "200": {
                        "description": "Successful Logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربر از حساب کاربری خارج شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربری با این مشخصات یافت نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification link",
                "description": "Resends the email verification link to the user if their email is not already verified.",
                "operationId": "resendVerificationEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "لینک تأیید ایمیل برای شما ارسال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل شما قبلا تأیید شده است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/verify": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check email verification status",
                "description": "Checks whether the authenticated user's email is verified or not.",
                "operationId": "checkVerificationStatus",
                "responses": {
                    "200": {
                        "description": "Email is already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل شما قبلا تأیید شده است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Email is not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "این ایمیل قبلا تأیید نشده است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email",
                "description": "Verifies the user's email address using the ID and hash provided in the verification link.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hashed email token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "c4ca4238a0b923820dcc509a6f75849b"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل شما با موفقیت تأیید شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "این ایمیل قبلا تأیید شده است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid verification link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تأیید ایمیل معتبر نیست"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/google": {
            "get": {
                "tags": [
                    "Authentication",
                    "Google Auth"
                ],
                "summary": "Redirect to Google OAuth",
                "description": "Generates a Google OAuth URL for authentication.",
                "operationId": "bac537e43e46cf7a0ee7cd60130c7233",
                "responses": {
                    "200": {
                        "description": "Google OAuth URL Generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "https://accounts.google.com/o/oauth2/auth?client_id=..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی در هدایت به گوگل رخ داد. لطفاً بعداً امتحان کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/google/callback": {
            "get": {
                "tags": [
                    "Authentication",
                    "Google Auth"
                ],
                "summary": "Handle Google OAuth Callback",
                "description": "Handles the callback from Google OAuth, registers/logs in the user, and returns an access token.To test this endpoint, first call the `/api/login/google` endpoint to get the Google authentication URL, authenticate with Google, and obtain the authorization code. Then use this endpoint to complete the login process",
                "operationId": "dc975878e4d0457da631126b5558994d",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "OAuth authorization code from Google",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "4/0Ad...QdA"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Logged in Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1..."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ورود موفقیت‌آمیز بود"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عملیات با خطا مواجه شد. لطفا مجددا تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resend-otp/{token}": {
            "get": {
                "tags": [
                    "OTP"
                ],
                "summary": "Resend OTP Code",
                "description": "This endpoint is used to resend the verification code. The `OTP will only be resent if Token has not been used yet and was created more than two minutes ago`.",
                "operationId": "cc72b4910df39ea8594ff6d99f13759f",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resend OTP Code Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کد تأیید مجدداً ارسال شد"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "dbvfjb845ncknbvkm22ckjkhnck..."
                                        },
                                        "meta": {
                                            "properties": {
                                                "next_step": {
                                                    "type": "string",
                                                    "example": "redirect_to_/confirm_otp_page}"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس وارد شده معتبر نیست"
                                        },
                                        "meta": {
                                            "properties": {
                                                "next_step": {
                                                    "type": "string",
                                                    "example": "redirect_back"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset email",
                "description": "Sends a password reset link to the given email address. Rate limiting is applied to prevent spam.",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "لینک بازیابی کلمه عبور به ایمیل شما ارسال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ما اخیرا یک لینک تنظیم مجدد کلمه عبور برای شما ارسال کرده ایم. لطفا قبل از درخواست مجدد صبر کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Resets the password using the provided token and new password.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "a1b2c3d4e5f6g7h8"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ex@mpl8N0risk7"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Ex@mpl8N0risk7"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "رمز عبور شما با موفقیت تغییر یافت"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اطلاعات وارد شده نامعتبر است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get available brands and categories",
                "description": "Returns a list of brands and top-level categories.",
                "operationId": "cc373d65e80cb10d908ef15d82ad68fb",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "brands": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "original_name": {
                                                        "type": "string",
                                                        "example": "Nike"
                                                    },
                                                    "persian_name": {
                                                        "type": "string",
                                                        "example": "Nike"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/filter/{category:slug?}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get filtered products",
                "description": "Returns a paginated list of products based on filters such as category, price range, and brands.",
                "operationId": "759617349ac8f14fb53e1b3a85bea9b8",
                "parameters": [
                    {
                        "name": "category:slug?",
                        "in": "path",
                        "description": "Optional Category Slug to filter products",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "کالای-دیجیتال"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search products",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "سامسونگ"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 100
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 500
                        }
                    },
                    {
                        "name": "brands[]",
                        "in": "query",
                        "description": "Array of brand IDs to filter products",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting option: 1=Newest, 2=Price High-Low, 3=Price Low-High, 4=Most Viewed, 5=Best Selling",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "products": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/options": {
            "get": {
                "tags": [
                    "Homepage"
                ],
                "summary": "Get homepage options",
                "description": "Retrieve banners, brands, and product lists for the homepage",
                "operationId": "getHomepageOptions",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slideShowImages": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Banner"
                                            }
                                        },
                                        "topBanners": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Banner"
                                            }
                                        },
                                        "middleBanners": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Banner"
                                            }
                                        },
                                        "bottomBanner": {
                                            "$ref": "#/components/schemas/Banner"
                                        },
                                        "brands": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand"
                                            }
                                        },
                                        "mostVisitedProducts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "offerProducts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/product/{product:slug}": {
            "get": {
                "tags": [
                    "Market"
                ],
                "summary": "Get product details",
                "description": "Retrieve detailed information of a specific product including its images, guarantees, colors, metas, attributes, and related products to design a single product page.",
                "operationId": "getProductPageDetails",
                "parameters": [
                    {
                        "name": "product:slug",
                        "in": "path",
                        "description": "The Slug of the product",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "موبایل-سامسونگ-مدل-a71"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "product": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "image": {
                                                        "properties": {
                                                            "indexArray": {
                                                                "properties": {
                                                                    "large": {
                                                                        "type": "string",
                                                                        "format": "uri",
                                                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                                                    },
                                                                    "medium": {
                                                                        "type": "string",
                                                                        "format": "uri",
                                                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                                                    },
                                                                    "small": {
                                                                        "type": "string",
                                                                        "format": "uri",
                                                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "directory": {
                                                                "type": "string",
                                                                "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                                                            },
                                                            "currentImage": {
                                                                "type": "string",
                                                                "example": "medium"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 199.99
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This is a sample product description."
                                                    },
                                                    "width": {
                                                        "type": "number",
                                                        "example": 10.5
                                                    },
                                                    "height": {
                                                        "type": "number",
                                                        "example": 20
                                                    },
                                                    "length": {
                                                        "type": "number",
                                                        "example": 30
                                                    },
                                                    "weight": {
                                                        "type": "number",
                                                        "example": 2.5
                                                    },
                                                    "marketable": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "marketable_number": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "gallery": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Gallery Image"
                                                                },
                                                                "image": {
                                                                    "properties": {
                                                                        "indexArray": {
                                                                            "properties": {
                                                                                "large": {
                                                                                    "type": "string",
                                                                                    "format": "uri",
                                                                                    "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                                                                },
                                                                                "medium": {
                                                                                    "type": "string",
                                                                                    "format": "uri",
                                                                                    "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                                                                },
                                                                                "small": {
                                                                                    "type": "string",
                                                                                    "format": "uri",
                                                                                    "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "directory": {
                                                                            "type": "string",
                                                                            "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                                                                        },
                                                                        "currentImage": {
                                                                            "type": "string",
                                                                            "example": "medium"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "guarantees": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "1 Year Warranty"
                                                                },
                                                                "price_increase": {
                                                                    "type": "number",
                                                                    "example": 20
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "colors": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "color_name": {
                                                                    "type": "string",
                                                                    "example": "Red"
                                                                },
                                                                "color": {
                                                                    "type": "string",
                                                                    "example": "#FF0000"
                                                                },
                                                                "price_increase": {
                                                                    "type": "number",
                                                                    "example": 10
                                                                },
                                                                "marketable_number": {
                                                                    "type": "integer",
                                                                    "example": 100
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "category_attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "category_attribute_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Size"
                                                                },
                                                                "unit": {
                                                                    "type": "string",
                                                                    "example": "cm"
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "2 - 4 - 6"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "meta": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "meta_key": {
                                                                    "type": "string",
                                                                    "example": "brand"
                                                                },
                                                                "meta_value": {
                                                                    "type": "string",
                                                                    "example": "Nike"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "is_favorite": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "related_products": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Related Product"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "example": 149.99
                                                        },
                                                        "image": {
                                                            "properties": {
                                                                "indexArray": {
                                                                    "properties": {
                                                                        "large": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                                                        },
                                                                        "medium": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                                                        },
                                                                        "small": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "directory": {
                                                                    "type": "string",
                                                                    "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                                                                },
                                                                "currentImage": {
                                                                    "type": "string",
                                                                    "example": "medium"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "marketable_value": {
                                                            "description": "marketable_value: 'قابل فروش' if 1, 'غیرقابل فروش' if 2",
                                                            "type": "string",
                                                            "example": "قابل فروش"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مسیر مورد نظر پیدا نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred, please try again later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/add-comment/{product}": {
            "post": {
                "tags": [
                    "Market"
                ],
                "summary": "Add a comment to a product",
                "description": "Users can `Submit a comment for a product`. The comment will be displayed after admin approval.",
                "operationId": "addCommentToProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "body"
                                ],
                                "properties": {
                                    "body": {
                                        "description": "The comment text must be between 2 and 1000 characters.Also can only contain Persian and English letters, Persian and English numbers, and symbols (-.,). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\,]+$",
                                        "example": "This is a test comment."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ثبت نظر با موفقیت انجام شد. پس از تأیید مدیر سایت نمایش داده خواهد شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to submit comment"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "ارسال نظر با خطا مواجه شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/add-rate/{product}": {
            "post": {
                "tags": [
                    "Market"
                ],
                "summary": "Rate a product",
                "description": "Allows authenticated users to `rate a product`. Users can rate `only if they have purchased the product`.",
                "operationId": "addRate",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating value must be between 1 and 5.",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "امتیاز شما با موفقیت ثبت گردید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User has not purchased the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "جهت ثبت امتیاز ابتدا باید محصول را خریداری نمایید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/compare/{product}": {
            "get": {
                "tags": [
                    "Comparison",
                    "Market"
                ],
                "summary": "Compare a product",
                "description": "Adds the first product to the comparison list and retrieves its attributes and details. The comparison list is stored on the client-side (e.g., in the session or local storage)",
                "operationId": "compareProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID to be compared",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to comparison successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اولین محصول با موفقیت به لیست مقایسه اضافه شد"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "مسیر مورد نظر یافت نشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/add-to-compare/{product}": {
            "post": {
                "tags": [
                    "Comparison",
                    "Market"
                ],
                "summary": "Add a product to the comparison list",
                "description": "Adds a new product to the comparison list while ensuring the maximum limit (4 products) and category consistency. The comparison list is stored on the client-side (e.g., in the session or local storage)",
                "operationId": "97ed431cbcfc515d417b928730052141",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the new product to be compared",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "products"
                                ],
                                "properties": {
                                    "products": {
                                        "description": "List of product IDs already in the comparison list",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comparison list updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "لیست مقایسه با موفقیت ارسال شد"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (e.g., exceeding max product limit or category mismatch)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "حداکثر ۴ محصول را می‌توان مقایسه کرد"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/remove-from-compare/{product}": {
            "post": {
                "tags": [
                    "Comparison",
                    "Market"
                ],
                "summary": "Remove a product from the comparison list",
                "description": "This endpoint removes a product from the comparison list. The comparison list is stored on the client-side (e.g., in the session or local storage), and no data is deleted from the database.",
                "operationId": "removeFromCompare",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "The ID of the product to be removed from the comparison list",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of product IDs currently in the comparison",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "products"
                                ],
                                "properties": {
                                    "products": {
                                        "description": "Array of product IDs in the comparison list",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 12
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product successfully removed from the comparison list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت از لیست مقایسه حذف شد"
                                        },
                                        "data": {
                                            "properties": {
                                                "products": {
                                                    "description": "Updated list of compared products",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "attributes": {
                                                    "description": "Attributes of the compared products",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The product is not in the comparison list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول موردنظر در لیست مقایسه وجود ندارد"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/my-favorites/remove/{product}": {
            "delete": {
                "tags": [
                    "Favorite",
                    "Market"
                ],
                "summary": "Remove a product from the favorites list",
                "description": "Removes a product from the authenticated user's favorites list.",
                "operationId": "removeFavorite",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to remove from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product successfully removed from favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول از لیست علاقه‌مندی پاک شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول مورد نظر در لیست علاقمندی ها وجود ندارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user orders",
                "description": "Retrieve a list of orders for the authenticated user. Optionally, filter by order status.",
                "operationId": "ecb22421df90cc31d505238f8d67d7aa",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter orders by status `0` means `unseen`, `1` means `processing`, `2` means `not approved`, `3` means `approved`, `4` means `canceled`, `5` means `returned`",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        {
                                            "properties": {
                                                "orderItems": {
                                                    "description": "OrderItems details",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrderItem"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/my-addresses/options": {
            "get": {
                "tags": [
                    "Profile",
                    "ProfileAddress/Form"
                ],
                "summary": "Get necessary options for Fram Address forms",
                "description": "This endpoint returns all `Provinces` and `Citiies` which can be used to create a new Address or edit an address",
                "operationId": "93cf1e40e8cca8c36d2ba79883c7657c",
                "responses": {
                    "200": {
                        "description": "Successfully fetched `Provinces` and `Citiies` that you may need to make create or edit form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "provinces": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "cities": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "province_id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get User Profile Information",
                "description": "This Endpoint returns Authenticated User Information to make a profile",
                "operationId": "7b7c8de14feb1ace9d4ac2d7709845ce",
                "responses": {
                    "200": {
                        "description": "Successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/update": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update User's Personal Information",
                "description": "This method updates authenticated user's personal information",
                "operationId": "a057bb431c8d99de38a7c5bd83bd7d21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "national_code"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "علی"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "رضایی"
                                    },
                                    "national_code": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile Has Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "حساب کاربری شما با موفقیت ویرایش شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/edit-contact": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Send Otp to Update Mobile Or Email",
                "description": "This method sends Otp code to change and confirm mobile or email",
                "operationId": "626ab0e3d2b3c745c576211bffd16ab8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP Send Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "جهت ویرایش موبایل یا ایمیل خود، لطفا کد تأیید ارسال‌شده را وارد کنید"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "token_value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ایمیل یا شماره موبایل باید منحصربفرد باشد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/confirm-contact/{token}": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Confirm OTP to change Mobile or Email",
                "description": "This method Update Mobile or Email if OTP code is valid",
                "operationId": "541a3d89d31b0bd226348bf9e976d4b0",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token from otp record",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email or Mobile is Updated Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اطلاعات حساب کاربری شما با موفقیت تغییر کرد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "OTP is Invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کد وارد شده معتبر نیست"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal servr error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/my-tickets": {
            "get": {
                "tags": [
                    "Profile",
                    "ProfileTicket"
                ],
                "summary": "Get a paginated list of authenticated user tickets to show in profile",
                "description": "Retrieve a list of `authenticated user tickets` with filtering options.",
                "operationId": "getTicketsForProfile",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter tickets by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "تیکت باز",
                                "تیکت بسته"
                            ],
                            "example": "تیکت باز"
                        }
                    },
                    {
                        "name": "seen",
                        "in": "query",
                        "description": "Filter tickets by seen status ( Seen, Unseen)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "تیکت جدید",
                                "تیکت دیده شده"
                            ],
                            "example": "تیکت دیده شده"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ticket"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ticket-details/{ticket}": {
            "get": {
                "tags": [
                    "Profile",
                    "TicketProfile/Form",
                    "ProfileTicket"
                ],
                "summary": "Get details of a specific Ticket",
                "description": "Returns the `Ticket` details anlog its relations(`tiketFile, children`) and provide details for showing in profile ticket details",
                "operationId": "getTicketDetailsFoeProfile",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "ID of the Ticket to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched Ticket details for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Ticket"
                                        },
                                        {
                                            "properties": {
                                                "ticketFile": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "file_path": {
                                                            "type": "string",
                                                            "example": "files\\ticket-files\\2025-01-01\\16.jpg"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "children": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "example": "مشکل در رابطه با خرید محصول"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "توضیح مشکل خرید محصول"
                                                            },
                                                            "author_value": {
                                                                "description": "Ticket Author status: 'admin' if 1, 'customer' if 2",
                                                                "type": "string",
                                                                "example": "ادمین"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ticket-answer/{ticket}": {
            "post": {
                "tags": [
                    "ProfileTicket",
                    "Profile"
                ],
                "summary": "Reply to a Ticket",
                "description": "This endpoint allows an customer to `reply to his/her or admin Tickets`. Also this endpoint allows the customer to attach a file to his ticket",
                "operationId": "answerTicketForCustomer",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "The ID of the Ticket to be replied to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symboles (-.,?؟.،!). Any other characters will result in a validation error",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\,،]+$",
                                        "example": "Thank you for your feedback, your order is being processed."
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "پاسخ شما با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ارسال پاسخ با خطا مواجه شد. لطفا دوباره امتحان کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The discription is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "توضیحات الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ticket-store": {
            "post": {
                "tags": [
                    "Profile",
                    "ProfileTicket"
                ],
                "summary": "create new Ticket",
                "description": "This method allows the customer to create a new `Ticket` along file and stores them.",
                "operationId": "5ea8a0ba075da990dcc19e2286ad4317",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "subject": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symbols (-.,?؟.،). Any other characters will result in a validation error.",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\,،]+$",
                                        "example": "مشکل خرید محصول"
                                    },
                                    "description": {
                                        "description": "This field can only contain Persian and English letters, Persian and English numbers, and symboles (-.,?؟.،!). Any other characters will result in a validation error",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z\\u0600-\\u06FF0-9\\s\\-\\.\\?\\!\\,،]+$",
                                        "example": "Thank you for your feedback, your order is being processed."
                                    },
                                    "category_id": {
                                        "description": "Category ID. This must be provided when creating or updating the Ticket.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "priority_id": {
                                        "description": "Priority ID. This must be provided when creating or updating the Ticket.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful Ticket creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "تیکت شما با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "عنوان الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address-and-delivery/options": {
            "get": {
                "tags": [
                    "SaleProcess",
                    "AddressAndDeliveryChoose/Form",
                    "AddressAndDelivery",
                    "Profile"
                ],
                "summary": "Get necessary options for Address and delivery choose forms",
                "description": "This endpoint returns all authenticated user `CartItems` and `Provinces` and `Citiies` and `Delivery Methods` which can be used to Address and delivery choose forms",
                "operationId": "7b6a55ec2e3a024a551c2548096cc086",
                "responses": {
                    "200": {
                        "description": "Successfully fetched authenticated user `CartItems` and `Provinces` and `Citiies` and `Delivery Methods that you may need to make Address and delivery choose forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "cartItems": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/CartItem"
                                                        }
                                                    },
                                                    "provinces": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "cities": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "province_id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "deliveryMethods": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/Delivery"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/add-address": {
            "post": {
                "tags": [
                    "SaleProcess",
                    "AddressAndDelivery",
                    "Profile"
                ],
                "summary": "create new address",
                "description": "this method creates a new `Address` and stores it.",
                "operationId": "ae5d4f2b91930f6ee183b670a231017d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "province_id": {
                                        "description": "ProvinceID.This field is required when creating or updating the address.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "city_id": {
                                        "description": "CityID.This field is required when creating or updating the address.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "no": {
                                        "type": "string",
                                        "example": "19"
                                    },
                                    "unit": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "4441775584"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maximum": "300",
                                        "example": "خ شهید نواب صفوی - ک شهید وزوایی"
                                    },
                                    "receiver": {
                                        "description": "if this field is true, these fileds will be required : recipient_first_name, recipient_last_name and mobile",
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "recipient_first_name": {
                                        "type": "string",
                                        "example": "ایمان"
                                    },
                                    "recipient_last_name": {
                                        "type": "string",
                                        "example": "مدائنی"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "09112563489"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful address and tags creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس جدید با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-cities/{province}": {
            "get": {
                "tags": [
                    "SaleProcess",
                    "ProfileAddress/Form",
                    "Profile"
                ],
                "summary": "Get necessary cities of a province for Load in address create or edit forms",
                "description": "This endpoint returns all `Cities of a province` which can be used to create or edit an address",
                "operationId": "28651a5c10faa266832484acdc87f7c4",
                "parameters": [
                    {
                        "name": "province",
                        "in": "path",
                        "description": "ID of the province to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched province cities that you may need to make create or edit form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "cities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "آستانه اشرفیه"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "cities": {
                                            "type": "object",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-address/{address}": {
            "put": {
                "tags": [
                    "SaleProcess",
                    "Profile"
                ],
                "summary": "update an existing address",
                "description": "this method update an existing `Address` and stores it.",
                "operationId": "84fe6c25d562a77927b45c45e8d6ad77",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Address id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "province_id": {
                                        "description": "ProvinceID.This field is required when creating or updating the address.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "city_id": {
                                        "description": "CityID.This field is required when creating or updating the address.",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "no": {
                                        "type": "string",
                                        "example": "19"
                                    },
                                    "unit": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "4441775584"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maximum": "300",
                                        "example": "خ شهید نواب صفوی - ک شهید وزوایی"
                                    },
                                    "receiver": {
                                        "description": "if this field is true, these fileds will be required : recipient_first_name, recipient_last_name and mobile",
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "recipient_first_name": {
                                        "type": "string",
                                        "example": "ایمان"
                                    },
                                    "recipient_last_name": {
                                        "type": "string",
                                        "example": "مدائنی"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "09112563489"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful address update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس با موفقیت بروزرسانی شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس الزامی است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطای غیرمنتظره در سرور رخ داده است. لطفاً دوباره تلاش کنید."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/choose-address-and-delivery": {
            "post": {
                "tags": [
                    "SaleProcess"
                ],
                "summary": "Choose Address and Delivery Method",
                "description": "Allows the user to select an address and delivery method. The total price of the cart is calculated, and the order is created or updated accordingly.",
                "operationId": "chooseAddressAndDelivery",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address_id",
                                    "delivery_id"
                                ],
                                "properties": {
                                    "address_id": {
                                        "description": "Selected address ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "delivery_id": {
                                        "description": "Selected delivery method ID",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order successfully created or updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "آدرس و روش ارسال سفارش شما با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred on the server. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/options": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve the authenticated user's cart items and related products",
                "description": "Returns a list of cart items along with related products that are not in the cart. The user must be authenticated.",
                "operationId": "getCartItems",
                "responses": {
                    "200": {
                        "description": "Successful response with cart items and related products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cartItems": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CartItem"
                                                    }
                                                },
                                                "relatedProducts": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                },
                                                "authUser": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/update": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update quantities of items in the cart",
                "description": "Updates the quantities of the user's cart items. The user must be authenticated.",
                "operationId": "updateCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "number": {
                                        "type": "object",
                                        "example": {
                                            "1": 2,
                                            "3": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Cart is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سبد خرید شما خالی است و امکان بروزرسانی وجود ندارد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Cart updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "سبد خرید با موفقیت بروزرسانی شد"
                                        },
                                        "meta": {
                                            "properties": {
                                                "next_step": {
                                                    "type": "string",
                                                    "example": "redirect_to_/choose-address-and-delivery"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/add-to-cart/{product:slug}": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "description": "Adds a product to the user's cart. The user must be authenticated.",
                "operationId": "addToCart",
                "parameters": [
                    {
                        "name": "product:slug",
                        "in": "path",
                        "description": "Product Slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "موبایل-سامسونگ-مدل-a71"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "color": {
                                        "type": "integer",
                                        "example": 4,
                                        "nullable": true
                                    },
                                    "guarantee": {
                                        "type": "integer",
                                        "example": 7,
                                        "nullable": true
                                    },
                                    "number": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول با موفقیت به سبد خرید افزوده شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product already exists in cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول از قبل در سبد خرید شما وجود داشته است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/remove-from-cart/{cartItem}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove an item from the cart",
                "description": "Removes a specific cart item. The user must be authenticated.",
                "operationId": "removeFromCart",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "محصول از سبد خرید شما پاک شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment/options": {
            "get": {
                "tags": [
                    "Payment Process"
                ],
                "summary": "Retrieve cart options and order details",
                "description": "Fetches the cart items and the current pending order for the authenticated user.",
                "operationId": "26183243d40035684617fcd4c953aad7",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved cart options and order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cartItems": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "order": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/copan-discount": {
            "post": {
                "tags": [
                    "Payment Process"
                ],
                "summary": "Apply a discount coupon",
                "description": "Validates and applies a discount coupon to the user's pending order.",
                "operationId": "2c11356254e6c4ab850b9d50890feb54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "copan_id"
                                ],
                                "properties": {
                                    "copan_id": {
                                        "description": "The discount coupon code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon successfully applied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کد تخفیف با موفقیت اعمال شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User not authorized to use this coupon",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "شما مجوز استفاده از این کد تخفیف را ندارید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid or expired coupon",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کد تخفیف نامعتبر بوده یا قبلا استفاده شده است"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment-submit": {
            "post": {
                "tags": [
                    "Payment Process"
                ],
                "summary": "Submit a payment",
                "description": "Handles the payment process based on the selected payment method.",
                "operationId": "07e03ad9ebbf407df8b7f761686b7899",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_type"
                                ],
                                "properties": {
                                    "payment_type": {
                                        "description": "The payment method (1: Online, 2: Offline, 3: Cash)",
                                        "type": "string"
                                    },
                                    "cash_receiver": {
                                        "description": "The person receiving the cash (if applicable)",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successfully submitted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربر عزیز، سفارش شما با موفقیت ثبت شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "خطایی غیرمنتظره در سرور رخ داده است. لطفا دوباره تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payment-callback/{order}/{onlinePayment}": {
            "post": {
                "tags": [
                    "Payment Process"
                ],
                "summary": "Handle payment callback",
                "description": "Verifies the payment transaction and updates the order status accordingly.",
                "operationId": "9b7a01a8152d1c956af83281e9078326",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "onlinePayment",
                        "in": "path",
                        "description": "OnlinePayment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "Authority",
                        "in": "query",
                        "description": "Authority ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "S000000000000000000000000000000de5yj"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "description": "Status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "OK"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربر عزیز، پرداخت سفارش شما با موفقیت انجام و در اسرع وقت پیگیری خواهد شد"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Payment verification failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "کاربر عزیز، ثبت سفارش شما با خطا مواجه شد. لطفا مجددا تلاش کنید"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile-required-fields": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get Required Profile Fields",
                "description": "This endpoint is designed to `help the frontend determine which profile fields should be mandatory when updating the user's profile`. It checks the user's existing data and returns the fields that are currently empty and need to be filled.",
                "operationId": "getRequiredFields",
                "responses": {
                    "200": {
                        "description": "List of required fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "required_fields": {
                                            "type": "object",
                                            "example": {
                                                "first_name": false,
                                                "last_name": true,
                                                "email": false,
                                                "mobile": true,
                                                "national_code": false
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile-completion": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update User Profile",
                "description": "Update Authenticated User Profile Information",
                "operationId": "ed1831d7eeb5b96e1ae3949ed40450cf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "if this field is empty in database,this field will be required"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "if this field is empty in database,this field will be required"
                                    },
                                    "national_code": {
                                        "type": "string",
                                        "example": "if this field is empty in database,this field will be required"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "if this field is empty in database,this field will be required"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "if this field is empty in database,this field will be required"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Profile is done.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "kjdfbmvjdkfjgkjnkhcdj65231bfcjn..."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "اطلاعات حساب کاربری با موفقیت تکمیل شد. اکنون می توانید سفارش خود را نهایی کنید"
                                        },
                                        "meta": {
                                            "properties": {
                                                "next_step": {
                                                    "type": "string",
                                                    "example": "redirect_to_/confirm-profile-info/{token}"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "phone number is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "فرمت شماره موبایل معتبر نیست"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/confirm-profile-info/{token}": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Confirm Profile Information With OTP code",
                "operationId": "7f10ab3fe444b3f65f062c650e4d94a8",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "maxLength": 6,
                                        "minLength": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Profile SuccessFully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/autocomplete": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search autocomplete for products",
                "description": "Returns a list of matching products grouped by category.",
                "operationId": "autocomplete",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "نتایج جستجو برای: گوشی"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "موبایل و تبلت": [
                                                    {
                                                        "category_id": 1,
                                                        "name": "Samsung Galaxy S23",
                                                        "slug": "samsung-galaxy-s23",
                                                        "category": {
                                                            "id": 1,
                                                            "name": "موبایل و تبلت"
                                                        }
                                                    },
                                                    {
                                                        "category_id": 1,
                                                        "name": "iPhone 14 Pro",
                                                        "slug": "iphone-14-pro",
                                                        "category": {
                                                            "id": 1,
                                                            "name": "موبایل و تبلت"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (missing search parameter)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "پارامتر جستجو ارسال نشده است."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Fount",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "موردی یافت نشد"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Banner": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "بنر تبلیغاتی صفحه اصلی"
                    },
                    "url": {
                        "description": "a valid url",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "example": "\\path\\image.jpg"
                    },
                    "position": {
                        "description": "Each number in the `position` field corresponds to a specific position on the page, determined by designer.For example 0 means above of the main page big slideshow",
                        "type": "integer",
                        "example": 0
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Banner status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "description": "Schema for a comment",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "body": {
                        "type": "string",
                        "example": "این محصول عالیه!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-25T12:45:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-25T12:50:00Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-25T12:50:00Z"
                    },
                    "seen_value": {
                        "description": "Comment Seen_Value: 'دیده شده' if 1, 'دیده نشده' if 2",
                        "type": "string",
                        "example": "دیده شده"
                    },
                    "approved_value": {
                        "description": "Comment Approved_Value: 'تأیید شده' if 1, 'تأیید نشده' if 2",
                        "type": "string",
                        "example": "تأیید شده"
                    },
                    "status_value": {
                        "description": "Comment status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "commentable_type_value": {
                        "type": "string",
                        "example": "نظر متعلق به یک محصول است"
                    },
                    "commentable": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "نام پست یا محصول"
                            }
                        },
                        "type": "object"
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "body": {
                                "type": "string",
                                "example": "این نظر منه"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "ایمان"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "مدائنی"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Faq": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "question": {
                        "type": "string",
                        "example": "آیا هوش مصنوعی می تواند جای برنامه نویسان را در آینده پر کند؟"
                    },
                    "answer": {
                        "type": "string",
                        "example": "خیر.. هوش مصنوعی نمی تواند جای انسان ها را اشغال کند"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Faq status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "هوش مصنوعی"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Menu": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "موبایل"
                    },
                    "url": {
                        "description": "a valid url",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Menu status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "کالای دیجیتال"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Page": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "تماس با ما"
                    },
                    "body": {
                        "type": "string",
                        "example": "توضیحات تماس با ما"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Page status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "تماس با ما"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Post": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "تأثیر هوش مصنوعی بر دنیای دیجیتال"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "summary": {
                        "type": "string",
                        "example": "خلاصه ای از تأثیر هوش مصنوعی بر دنیای دیجیتال"
                    },
                    "body": {
                        "type": "string",
                        "example": "توضیح تأثیر هوش مصنوعی بر دنیای دیجیتال"
                    },
                    "image": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\post\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "published_at": {
                        "description": "publish datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "commentable_value": {
                        "description": "commentable value: 'yes' if 1, 'no' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "postCategory": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "تازه های دیجیتال"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "ایمان"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "مدائنی"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "تازه های دیجیتال"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PostCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "تکنولوژی"
                    },
                    "description": {
                        "type": "string",
                        "example": "توضیحات تکنولوژی"
                    },
                    "image": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\post-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\post-category\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "PostCategory status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "تکنولوژی"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "AmazingSale": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "percentage": {
                        "type": "integer",
                        "example": 10
                    },
                    "start_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "end_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "AmazingSale status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "سرخکن کنوود"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Brand": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "persian_name": {
                        "type": "string",
                        "example": "سامسونگ"
                    },
                    "original_name": {
                        "type": "string",
                        "example": "Samsung"
                    },
                    "logo": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "برند سامسونگ"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "number": {
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "ایمان"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "مدائنی"
                            }
                        },
                        "type": "object"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "موبایل سامسونگ a71"
                            },
                            "image": {
                                "properties": {
                                    "indexArray": {
                                        "properties": {
                                            "large": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                            },
                                            "medium": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                            },
                                            "small": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "directory": {
                                        "type": "string",
                                        "example": "images\\\\brand\\\\2025\\\\02\\\\03\\\\1738570484"
                                    },
                                    "currentImage": {
                                        "type": "string",
                                        "example": "medium"
                                    }
                                },
                                "type": "object"
                            },
                            "slug": {
                                "type": "string",
                                "example": "موبایل-سامسونگ-a71"
                            }
                        },
                        "type": "object"
                    },
                    "color": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "سبز"
                            }
                        },
                        "type": "object"
                    },
                    "guarantee": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "سازگار"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "کالای دیجیتال"
                    },
                    "description": {
                        "type": "string",
                        "example": "توضیحات کالای دیجیتال"
                    },
                    "image": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\product-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\product-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\product-category\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\product-category\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "show_in_menu_value": {
                        "description": "show In Menu: 'yes' if 1, 'no' if 2",
                        "type": "string",
                        "example": "بله"
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "کالای دیجیتال"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "کالای دیجیتال"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CategoryAttribute": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "دوربین"
                    },
                    "unit": {
                        "type": "string",
                        "example": "مگاپیکسل"
                    },
                    "type_value": {
                        "description": "type_value: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "لوازم الکترونیکی"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    }
                },
                "type": "object"
            },
            "CategoryValue": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "example": "example_value"
                                },
                                "price_increase": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 10.5
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "type_value": {
                        "description": "type_value: 'multiple values select by customers (effects on price)' if 1, 'simple' if 2",
                        "type": "string",
                        "example": "ساده"
                    },
                    "attribute": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "پردازنده"
                            },
                            "unit": {
                                "type": "string",
                                "example": "mhrtz"
                            },
                            "type_value": {
                                "description": "Attribute type: 'active' if 1, 'inactive' if 2",
                                "type": "string",
                                "example": "فعال"
                            }
                        },
                        "type": "object"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "گوشی سامسونگ a71"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CommonDiscount": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "عید سعید قربان"
                    },
                    "percentage": {
                        "type": "integer",
                        "example": 5
                    },
                    "discount_ceiling": {
                        "type": "number",
                        "format": "float",
                        "example": 65.5
                    },
                    "minimal_order_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 65.5
                    },
                    "start_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "end_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Common Discount status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "Copan": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "code": {
                        "type": "string",
                        "example": "جشنواره قربان تا غدیر آمازون"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 65.5
                    },
                    "discount_ceiling": {
                        "type": "number",
                        "format": "float",
                        "example": 65.5
                    },
                    "start_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "end_date": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Copan status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "amount_type_value": {
                        "description": "Amount Type: 'price unit' if 1, 'percentage' if 2",
                        "type": "string",
                        "example": "درصدی"
                    },
                    "type_value": {
                        "description": "Coapn Type: 'special for one user' if 1, 'common which means every user can use it' if 2",
                        "type": "string",
                        "example": "عمومی"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "ایمان"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "مدائنی"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Delivery": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "پست ممتاز"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 125000
                    },
                    "delivery_time": {
                        "type": "integer",
                        "example": 1
                    },
                    "delivery_time_unit": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "day or hour"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Delivery status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "Gallery": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ضمانت 24 ماهه پاکشوما"
                    },
                    "image": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\gallery\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\gallery\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\gallery\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\market\\\\product\\\\gallery\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "ماوس میوا"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Guarantee": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ضمانت 24 ماهه پاکشوما"
                    },
                    "price_increase": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "ProductGuarantee status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "ماوس میوا"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Represents an order placed by a user",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the order",
                        "type": "integer",
                        "example": 24
                    },
                    "postal_tracking_code": {
                        "description": "Tracking code for the shipment",
                        "type": "string",
                        "example": "1234567890123456789"
                    },
                    "address_object": {
                        "description": "User's address details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 18
                            },
                            "city_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "recipient_first_name": {
                                "type": "string",
                                "example": "راضیه"
                            },
                            "recipient_last_name": {
                                "type": "string",
                                "example": "آذری آستانه"
                            },
                            "mobile": {
                                "type": "string",
                                "example": "09115577889"
                            },
                            "postal_code": {
                                "type": "string",
                                "example": "4441775584"
                            },
                            "unit": {
                                "type": "string",
                                "example": "2"
                            },
                            "no": {
                                "type": "string",
                                "example": "-"
                            },
                            "address": {
                                "type": "string",
                                "example": "خ شهید نواب صفوی، کوی یاسر رحیمی پور"
                            },
                            "status": {
                                "type": "integer",
                                "example": 2
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-11-11T08:21:25.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-11-11T08:21:25.000000Z"
                            },
                            "deleted_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "payment_object": {
                        "description": "Payment details of the order",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 18
                            },
                            "amount": {
                                "type": "string",
                                "example": "3250000.000"
                            },
                            "pay_date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-11-17T16:12:02.679967Z"
                            },
                            "transaction_id": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "status": {
                                "type": "integer",
                                "example": 1
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-11-17T16:12:02.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-11-17T16:12:02.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "delivery_object": {
                        "description": "Delivery service details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "پیک موتوری"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float",
                                "example": "50000.000"
                            },
                            "delivery_time": {
                                "type": "integer",
                                "example": 1
                            },
                            "delivery_time_unit": {
                                "type": "string",
                                "example": "ساعت"
                            },
                            "status": {
                                "type": "integer",
                                "example": 1
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T09:39:46.000000Z"
                            },
                            "deleted_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "delivery_amount": {
                        "type": "string",
                        "example": "50000.000"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "order_final_amount": {
                        "type": "string",
                        "example": "3250000.000"
                    },
                    "order_discount_amount": {
                        "type": "string",
                        "example": "0.000"
                    },
                    "copan_object": {
                        "description": "Copan details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "code": {
                                "type": "string",
                                "example": "eyedenorouz"
                            },
                            "amount": {
                                "type": "number",
                                "format": "float",
                                "example": "50000.000"
                            },
                            "amount_type": {
                                "oneOf": [
                                    {
                                        "description": "1 = price unit",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = percentage",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            },
                            "discount_ceiling": {
                                "type": "integer",
                                "example": 1
                            },
                            "type": {
                                "oneOf": [
                                    {
                                        "description": "1 = private for `one user`",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = common for `every user`",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            },
                            "status": {
                                "oneOf": [
                                    {
                                        "description": "1 = active",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = inactive",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T09:39:46.000000Z"
                            },
                            "deleted_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "order_copan_discount_amount": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "common_discount_object": {
                        "description": "Common Discount details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "title": {
                                "type": "string",
                                "example": "ملاید امام حسین ع"
                            },
                            "percentage": {
                                "type": "integer",
                                "example": 10
                            },
                            "discount_ceiling": {
                                "type": "number",
                                "format": "float",
                                "example": "50000.000"
                            },
                            "minimal_order_amount": {
                                "type": "number",
                                "format": "float",
                                "example": "50000.000"
                            },
                            "status": {
                                "oneOf": [
                                    {
                                        "description": "1 = active",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = inactive",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T08:22:58.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-21T09:39:46.000000Z"
                            },
                            "deleted_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "order_common_discount_amount": {
                        "type": "string",
                        "example": "0.000"
                    },
                    "order_total_products_discount_amount": {
                        "type": "string",
                        "example": "0.000"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-17T16:11:53.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-09T16:31:16.000000Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "payment_status_value": {
                        "type": "string",
                        "example": "پرداخت شده"
                    },
                    "payment_type_value": {
                        "type": "string",
                        "example": "آفلاین"
                    },
                    "delivery_status_value": {
                        "type": "string",
                        "example": "در حال ارسال"
                    },
                    "order_status_value": {
                        "type": "string",
                        "example": "باطل شده"
                    },
                    "user": {
                        "description": "User details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 18
                            },
                            "first_name": {
                                "type": "string",
                                "example": "آناهید"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "آذری آستانه"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "Represents an orderItem",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the order",
                        "type": "integer",
                        "example": 24
                    },
                    "product_object": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "گوشی سامسونگ"
                            },
                            "image": {
                                "properties": {
                                    "indexArray": {
                                        "properties": {
                                            "large": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                            },
                                            "medium": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                            },
                                            "small": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "directory": {
                                        "type": "string",
                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                                    },
                                    "currentImage": {
                                        "type": "string",
                                        "example": "medium"
                                    }
                                },
                                "type": "object"
                            },
                            "view": {
                                "type": "integer",
                                "example": 1
                            },
                            "slug": {
                                "type": "string",
                                "maxLength": 255,
                                "example": "example-slug"
                            },
                            "width": {
                                "type": "number",
                                "format": "float",
                                "example": 0.5
                            },
                            "length": {
                                "type": "number",
                                "format": "float",
                                "example": 0.5
                            },
                            "weight": {
                                "type": "number",
                                "format": "float",
                                "example": 0.5
                            },
                            "height": {
                                "type": "number",
                                "format": "float",
                                "example": 0.5
                            },
                            "price": {
                                "type": "number",
                                "format": "float",
                                "example": 0.5
                            },
                            "introduction": {
                                "type": "string",
                                "example": "گوشی a71 یکی از گوشی های میان رده سامسونگ است"
                            },
                            "marketable_number": {
                                "type": "integer",
                                "example": 1
                            },
                            "frozen_number": {
                                "type": "integer",
                                "example": 1
                            },
                            "sold_number": {
                                "type": "integer",
                                "example": 1
                            },
                            "related_products": {
                                "description": "ProductIds which related to current product",
                                "type": "string",
                                "example": "9-10-12"
                            },
                            "status": {
                                "description": "Product status: 'active' if 1, 'inactive' if 2",
                                "type": "integer",
                                "example": 1
                            },
                            "marketable": {
                                "description": "marketable_value: 'قابل فروش' if 1, 'غیرقابل فروش' if 2",
                                "type": "integer",
                                "example": 2
                            },
                            "published_at": {
                                "description": "publish datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "created_at": {
                                "description": "creation datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "updated_at": {
                                "description": "update datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "deleted_at": {
                                "description": "delete datetime",
                                "type": "string",
                                "format": "datetime",
                                "example": "2025-02-22T14:30:00Z"
                            }
                        },
                        "type": "object"
                    },
                    "amazing_sale_id": {
                        "description": "The unique identifier for the AmazingSale",
                        "type": "integer",
                        "example": 24
                    },
                    "amazing_sale_object": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "percentage": {
                                "type": "integer",
                                "example": 10
                            },
                            "status": {
                                "description": "AmazingSale status: 'active' if 1, 'inactive' if 2",
                                "type": "integer",
                                "example": 1
                            },
                            "start_date": {
                                "description": "creation datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "end_date": {
                                "description": "creation datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "created_at": {
                                "description": "creation datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "updated_at": {
                                "description": "update datetime",
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-02-22T10:00:00Z"
                            },
                            "deleted_at": {
                                "description": "delete datetime",
                                "type": "string",
                                "format": "datetime",
                                "example": "2025-02-22T14:30:00Z"
                            }
                        },
                        "type": "object"
                    },
                    "amazing_sale_discount_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "number": {
                        "type": "number",
                        "example": 2
                    },
                    "final_product_price": {
                        "type": "number",
                        "format": "float",
                        "example": 3250000
                    },
                    "final_total_price": {
                        "description": "Represent final_product_price * number",
                        "type": "number",
                        "format": "float",
                        "example": 600000
                    },
                    "color": {
                        "description": "Product Color details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "سبز"
                            },
                            "status_value": {
                                "oneOf": [
                                    {
                                        "description": "1 = price unit",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = percentage",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "guarantee": {
                        "description": "Product Guarantee details",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "سازگار"
                            },
                            "status_value": {
                                "oneOf": [
                                    {
                                        "description": "1 = price unit",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    {
                                        "description": "2 = percentage",
                                        "type": "integer",
                                        "example": 2
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-17T16:11:53.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-09T16:31:16.000000Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Payment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 5000
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Payment status: 'notPaid' if 0, 'paid' if 1, 'canceled' if 2, 'returned' if 3",
                        "type": "string",
                        "example": "پرداخت شده"
                    },
                    "type_value": {
                        "description": "type value 'online' if 0, 'offline' if 1, 'cash' if 2",
                        "type": "string",
                        "example": "آنلاین"
                    },
                    "paymentable_type_value": {
                        "type": "string",
                        "example": "نوع روش پرداخت"
                    },
                    "paymentable": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "amount": {
                                "type": "number",
                                "format": "float",
                                "example": 100000
                            },
                            "pay_date": {
                                "description": "paydate datetime",
                                "type": "string",
                                "format": "datetime",
                                "example": "2025-02-22T14:30:00Z"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "راضیه"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "آذری آستانه"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "گوشی سامسونگ"
                    },
                    "image": {
                        "properties": {
                            "indexArray": {
                                "properties": {
                                    "large": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_large.jpg"
                                    },
                                    "medium": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_medium.jpg"
                                    },
                                    "small": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484\\\\1738570484_small.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "directory": {
                                "type": "string",
                                "example": "images\\\\market\\\\product\\\\12\\\\2025\\\\02\\\\03\\\\1738570484"
                            },
                            "currentImage": {
                                "type": "string",
                                "example": "medium"
                            }
                        },
                        "type": "object"
                    },
                    "view": {
                        "type": "integer",
                        "example": 1
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "length": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "introduction": {
                        "type": "string",
                        "example": "گوشی a71 یکی از گوشی های میان رده سامسونگ است"
                    },
                    "marketable_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "frozen_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "sold_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "published_at": {
                        "description": "publish datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "marketable_value": {
                        "description": "marketable_value: 'قابل فروش' if 1, 'غیرقابل فروش' if 2",
                        "type": "string",
                        "example": "قابل فروش"
                    },
                    "related_products_value": {
                        "description": "Array of related products with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Gaming Mouse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "brand": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "persian_name": {
                                "type": "string",
                                "example": "اسنوا"
                            }
                        },
                        "type": "object"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "لوازم الکترونیکی"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Array of related tags with both ID and name",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "گوشی سامسونگ"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ProductColor": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "color_name": {
                        "type": "string",
                        "example": "آبی روشن"
                    },
                    "color": {
                        "type": "string",
                        "example": "#8bdbfd"
                    },
                    "price_increase": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "marketable_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "frozen_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "sold_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "ProductGuarantee status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "product": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "ماوس میوا"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Email": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "subject": {
                        "type": "string",
                        "example": "حراج فصل آمازون"
                    },
                    "body": {
                        "type": "string",
                        "example": "توضیحات حراج فصل آمازون"
                    },
                    "published_at": {
                        "description": "published datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "EmailFile": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "فایل مهم"
                    },
                    "original_name": {
                        "type": "string",
                        "example": "xyz.jpg"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "/path/file.zip"
                    },
                    "file_size": {
                        "type": "integer",
                        "example": 956321
                    },
                    "file_type": {
                        "type": "string",
                        "example": "jpg,zip,docs,pdf"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "EmailFile status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "email": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "subject": {
                                "type": "string",
                                "example": "حراج فصل"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SMS": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "حراج فصل آمازون"
                    },
                    "body": {
                        "type": "string",
                        "example": "توضیحات حراج فصل آمازون"
                    },
                    "published_at": {
                        "description": "published datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Product status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "Setting": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "بنر تبلیغاتی صفحه اصلی"
                    },
                    "description": {
                        "type": "string",
                        "example": "بنر تبلیغاتی صفحه اصلی"
                    },
                    "icon": {
                        "type": "string",
                        "format": "uri",
                        "example": "\\path\\icon.png"
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri",
                        "example": "\\path\\logo.png"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "برنامه نویسی"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "taggable": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "taggable_id": {
                                "description": "Id of Object which related to Current tag",
                                "type": "integer",
                                "example": 3
                            },
                            "taggable_type_value": {
                                "type": "string",
                                "example": "کالای دیجیتال"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Ticket": {
                "title": "Ticket Model",
                "description": "Schema for a Ticket",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "subject": {
                        "type": "string",
                        "example": "مشکل در رابطه با خرید محصول"
                    },
                    "description": {
                        "type": "string",
                        "example": "توضیح مشکل خرید محصول"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-08T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-08T12:30:00Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-08T12:30:00Z"
                    },
                    "status_value": {
                        "description": "Ticket status: 'closed' if 1, 'copen' if 2",
                        "type": "string",
                        "example": "تیکت باز"
                    },
                    "seen_value": {
                        "description": "Ticket Seen status: 'seen' if 1, 'unseen' if 2",
                        "type": "string",
                        "example": "دیده نشده"
                    },
                    "author_value": {
                        "description": "Ticket Author status: 'admin' if 1, 'customer' if 2",
                        "type": "string",
                        "example": "ادمین"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "first_name": {
                                "type": "string",
                                "example": "ایمان"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "مدائنی"
                            }
                        },
                        "type": "object"
                    },
                    "admin": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "user": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "ایمان"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "مدائنی"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "پشتیبانی فنی"
                            }
                        },
                        "type": "object"
                    },
                    "priority": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "بسیار مهم"
                            }
                        },
                        "type": "object"
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "subject": {
                                "type": "string",
                                "example": "مشکل در خرید محصول"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TicketCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "کالای دیجیتال"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "TicketCategory status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "TicketPriority": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "بسیار مهم"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "TicketPriority status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "type": "string",
                        "example": "missastaneh@yahoo.com"
                    },
                    "mobile": {
                        "type": "string",
                        "example": "09125478963"
                    },
                    "national_code": {
                        "type": "string",
                        "example": "2732548965"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "ایمان"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "مدائنی"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "example-slug"
                    },
                    "email_verified_at": {
                        "description": "email verify datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "mobile_verified_at": {
                        "description": "mobile verify datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "profile_photo_path": {
                        "type": "string",
                        "format": "uri",
                        "example": "\\path\\image.jpg"
                    },
                    "activation_date": {
                        "description": "activation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "google_id": {
                        "type": "string",
                        "example": "27325489656859526545"
                    },
                    "status_value": {
                        "description": "User status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "activation_value": {
                        "description": "Activation Value: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "user_type_value": {
                        "description": "User Type Value: 'admin' if 1, 'user' if 2",
                        "type": "string",
                        "example": "ادمین"
                    }
                },
                "type": "object"
            },
            "City": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "رشت"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "province": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "تهران"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "create-post"
                    },
                    "description": {
                        "type": "string",
                        "example": "create-post-description"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Permission status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "roles": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "superadmin"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Province": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "تهران"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "create-post"
                    },
                    "description": {
                        "type": "string",
                        "example": "create-post-description"
                    },
                    "created_at": {
                        "description": "creation datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "update datetime",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-22T10:00:00Z"
                    },
                    "deleted_at": {
                        "description": "delete datetime",
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-02-22T14:30:00Z"
                    },
                    "status_value": {
                        "description": "Permission status: 'active' if 1, 'inactive' if 2",
                        "type": "string",
                        "example": "فعال"
                    },
                    "permissions": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "delete-post"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Otp Code or Url Address is invalid",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": "false"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "کد وارد شده صحیح نیست یا آدرس معتبر نیست"
                                },
                                "meta": {
                                    "properties": {
                                        "next_step": {
                                            "type": "redirect_to_/profile-completion"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Banner",
            "description": "Banner"
        },
        {
            "name": "Banner/Form",
            "description": "Banner/Form"
        },
        {
            "name": "PostCategory",
            "description": "PostCategory"
        },
        {
            "name": "PostCategory/Form",
            "description": "PostCategory/Form"
        },
        {
            "name": "Comment",
            "description": "Comment"
        },
        {
            "name": "PostComment",
            "description": "PostComment"
        },
        {
            "name": "PostComment/Form",
            "description": "PostComment/Form"
        },
        {
            "name": "Faq",
            "description": "Faq"
        },
        {
            "name": "Faq/Form",
            "description": "Faq/Form"
        },
        {
            "name": "Menu",
            "description": "Menu"
        },
        {
            "name": "Menu/Form",
            "description": "Menu/Form"
        },
        {
            "name": "Page",
            "description": "Page"
        },
        {
            "name": "Page/Form",
            "description": "Page/Form"
        },
        {
            "name": "Post",
            "description": "Post"
        },
        {
            "name": "Post/Form",
            "description": "Post/Form"
        },
        {
            "name": "Tag",
            "description": "Tag"
        },
        {
            "name": "Tag/Form",
            "description": "Tag/Form"
        },
        {
            "name": "Brand",
            "description": "Brand"
        },
        {
            "name": "Brand/Form",
            "description": "Brand/Form"
        },
        {
            "name": "ProductCategory",
            "description": "ProductCategory"
        },
        {
            "name": "ProductCategory/Form",
            "description": "ProductCategory/Form"
        },
        {
            "name": "City",
            "description": "City"
        },
        {
            "name": "City/Form",
            "description": "City/Form"
        },
        {
            "name": "ProductComment",
            "description": "ProductComment"
        },
        {
            "name": "ProductComment/Form",
            "description": "ProductComment/Form"
        },
        {
            "name": "Delivery",
            "description": "Delivery"
        },
        {
            "name": "Delivery/Form",
            "description": "Delivery/Form"
        },
        {
            "name": "Discount",
            "description": "Discount"
        },
        {
            "name": "Copan",
            "description": "Copan"
        },
        {
            "name": "Discount/Form",
            "description": "Discount/Form"
        },
        {
            "name": "Copan/Form",
            "description": "Copan/Form"
        },
        {
            "name": "AmazingSale/Form",
            "description": "AmazingSale/Form"
        },
        {
            "name": "CommonDiscount",
            "description": "CommonDiscount"
        },
        {
            "name": "CommonDiscount/Form",
            "description": "CommonDiscount/Form"
        },
        {
            "name": "AmazingSale",
            "description": "AmazingSale"
        },
        {
            "name": "Gallery",
            "description": "Gallery"
        },
        {
            "name": "Gallery/Form",
            "description": "Gallery/Form"
        },
        {
            "name": "Order",
            "description": "Order"
        },
        {
            "name": "Payment",
            "description": "Payment"
        },
        {
            "name": "Payment/Form",
            "description": "Payment/Form"
        },
        {
            "name": "ProductColor",
            "description": "ProductColor"
        },
        {
            "name": "ProductColor/Form",
            "description": "ProductColor/Form"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Store",
            "description": "Store"
        },
        {
            "name": "Product/Form",
            "description": "Product/Form"
        },
        {
            "name": "Store/Form",
            "description": "Store/Form"
        },
        {
            "name": "Guarantee",
            "description": "Guarantee"
        },
        {
            "name": "Guarantee/Form",
            "description": "Guarantee/Form"
        },
        {
            "name": "ProductProperty",
            "description": "ProductProperty"
        },
        {
            "name": "ProductProperty/Form",
            "description": "ProductProperty/Form"
        },
        {
            "name": "CategoryAttribute",
            "description": "CategoryAttribute"
        },
        {
            "name": "CategoryAttribute/Form",
            "description": "CategoryAttribute/Form"
        },
        {
            "name": "CategoryValue",
            "description": "CategoryValue"
        },
        {
            "name": "CategoryValue/Form",
            "description": "CategoryValue/Form"
        },
        {
            "name": "Province",
            "description": "Province"
        },
        {
            "name": "Province/Form",
            "description": "Province/Form"
        },
        {
            "name": "Notification",
            "description": "Notification"
        },
        {
            "name": "Email",
            "description": "Email"
        },
        {
            "name": "Email/Form",
            "description": "Email/Form"
        },
        {
            "name": "EmailFile",
            "description": "EmailFile"
        },
        {
            "name": "EmailFile/Form",
            "description": "EmailFile/Form"
        },
        {
            "name": "Email Files",
            "description": "Email Files"
        },
        {
            "name": "SMS",
            "description": "SMS"
        },
        {
            "name": "SMS/Form",
            "description": "SMS/Form"
        },
        {
            "name": "Setting",
            "description": "Setting"
        },
        {
            "name": "TicketAdmin",
            "description": "TicketAdmin"
        },
        {
            "name": "TicketCategory",
            "description": "TicketCategory"
        },
        {
            "name": "TicketCategory/Form",
            "description": "TicketCategory/Form"
        },
        {
            "name": "Ticket",
            "description": "Ticket"
        },
        {
            "name": "Ticket/Form",
            "description": "Ticket/Form"
        },
        {
            "name": "TicketPriority",
            "description": "TicketPriority"
        },
        {
            "name": "TicketPriority/Form",
            "description": "TicketPriority/Form"
        },
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Admin/Form",
            "description": "Admin/Form"
        },
        {
            "name": "Customer",
            "description": "Customer"
        },
        {
            "name": "Customer/Form",
            "description": "Customer/Form"
        },
        {
            "name": "Permission",
            "description": "Permission"
        },
        {
            "name": "Permission/Form",
            "description": "Permission/Form"
        },
        {
            "name": "Role",
            "description": "Role"
        },
        {
            "name": "Role/Form",
            "description": "Role/Form"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Google Auth",
            "description": "Google Auth"
        },
        {
            "name": "OTP",
            "description": "OTP"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Homepage",
            "description": "Homepage"
        },
        {
            "name": "Market",
            "description": "Market"
        },
        {
            "name": "Comparison",
            "description": "Comparison"
        },
        {
            "name": "Favorite",
            "description": "Favorite"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "ProfileAddress/Form",
            "description": "ProfileAddress/Form"
        },
        {
            "name": "ProfileTicket",
            "description": "ProfileTicket"
        },
        {
            "name": "TicketProfile/Form",
            "description": "TicketProfile/Form"
        },
        {
            "name": "SaleProcess",
            "description": "SaleProcess"
        },
        {
            "name": "AddressAndDeliveryChoose/Form",
            "description": "AddressAndDeliveryChoose/Form"
        },
        {
            "name": "AddressAndDelivery",
            "description": "AddressAndDelivery"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Payment Process",
            "description": "Payment Process"
        },
        {
            "name": "Search",
            "description": "Search"
        }
    ]
}